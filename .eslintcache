[{"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/index.js":"1","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js":"2","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/reducer.js":"3","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/reportWebVitals.js":"4","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/App.js":"5","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Home/Home.js":"6","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Header/Header.js":"7","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/JoinRoom/Join.js":"8","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Lobby.js":"9","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Device/Device.js":"10","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Setup.js":"11","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Home/HomeButtons.js":"12","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js":"13","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Ceremony/Ceremony.js":"14","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/WaitingRoom/WaitingRoom.js":"15","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/Play.js":"16","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Navigation/Navigation.js":"17","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/SelectPlaylist.js":"18","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/LightBox.js":"19","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/PlayingTrack.js":"20","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/BingoTypes.js":"21","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/PlaybackOptions/PlaybackOptions.js":"22","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/ModalPlaylistRow.js":"23"},{"size":891,"mtime":1614347673192,"results":"24","hashOfConfig":"25"},{"size":409,"mtime":1611308772675,"results":"26","hashOfConfig":"25"},{"size":2607,"mtime":1614683424413,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1611308484775,"results":"28","hashOfConfig":"25"},{"size":1789,"mtime":1615202077139,"results":"29","hashOfConfig":"25"},{"size":1894,"mtime":1615206250639,"results":"30","hashOfConfig":"25"},{"size":515,"mtime":1614332095247,"results":"31","hashOfConfig":"25"},{"size":1323,"mtime":1614331901682,"results":"32","hashOfConfig":"25"},{"size":7534,"mtime":1615206209883,"results":"33","hashOfConfig":"25"},{"size":6675,"mtime":1615206932828,"results":"34","hashOfConfig":"25"},{"size":584,"mtime":1614768707620,"results":"35","hashOfConfig":"25"},{"size":892,"mtime":1615206861479,"results":"36","hashOfConfig":"25"},{"size":1081,"mtime":1614932687522,"results":"37","hashOfConfig":"25"},{"size":2673,"mtime":1615207448794,"results":"38","hashOfConfig":"25"},{"size":3404,"mtime":1614769241105,"results":"39","hashOfConfig":"25"},{"size":17522,"mtime":1614768821044,"results":"40","hashOfConfig":"25"},{"size":1584,"mtime":1614345586486,"results":"41","hashOfConfig":"25"},{"size":1832,"mtime":1614344304847,"results":"42","hashOfConfig":"25"},{"size":560,"mtime":1614347773525,"results":"43","hashOfConfig":"25"},{"size":470,"mtime":1613810132368,"results":"44","hashOfConfig":"25"},{"size":9193,"mtime":1614768771543,"results":"45","hashOfConfig":"25"},{"size":5316,"mtime":1615206967981,"results":"46","hashOfConfig":"25"},{"size":1187,"mtime":1615206913867,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ikzjc4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/index.js",[],["105","106"],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/reducer.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/reportWebVitals.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/App.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Home/Home.js",["107"],"import React, { useEffect } from 'react';\nimport HomeButtons from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Home/HomeButtons.js';\nimport { getTokenFromUrl } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js';\nimport { Setup } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Setup.js';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useDataLayerValue } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js';\n\nconst spotify = new SpotifyWebApi();\n\nexport function Home({ socket }) {\n  // eslint-disable-next-line\n  const [{ token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    let _token = hash.access_token;\n    let _refresh = hash.refresh_token;\n\n    if(_token) {\n      async function getInitialData() {\n        await spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_REFRESH_TOKEN\",\n        refreshToken: _refresh\n      })\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      })\n\n      await spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        })\n      })\n\n      await spotify.getUserPlaylists({ \"limit\": \"50\"}).then(playlists => {   \n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        })\n      })\n      \n      }\n\n      getInitialData()\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      })\n    }\n  }, [])\n\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Setup spotify={spotify} socket={socket}/>\n        ) : (\n          <HomeButtons />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Header/Header.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/JoinRoom/Join.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Lobby.js",["108"],"import React, { useEffect, useState, useRef } from 'react';\nimport './Lobby.css';\nimport WaitingRoom from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/WaitingRoom/WaitingRoom.js';\nimport Play from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/Play.js';\nimport Ceremony from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Ceremony/Ceremony.js';\nimport { useBeforeunload } from 'react-beforeunload';\nimport { Prompt } from 'react-router';\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport axios from 'axios';\n\nlet memUserName;\nlet memRoom;\nlet memPaused = null;\n\nlet memTracks = null;\nlet hidden, visibilityChange;\nif (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n  hidden = \"hidden\";\n  visibilityChange = \"visibilitychange\";\n} else if (typeof document.msHidden !== \"undefined\") {\n  hidden = \"msHidden\";\n  visibilityChange = \"msvisibilitychange\";\n} else if (typeof document.webkitHidden !== \"undefined\") {\n  hidden = \"webkitHidden\";\n  visibilityChange = \"webkitvisibilitychange\";\n}\n\nfunction Lobby({ socket }) {\n    const [{ token, spotify }] = useDataLayerValue();\n    const [currentPlayers, setCurrentPlayers] = useState([]);\n    const [room, setRoom] = useState(null);\n    const [tracks, setTracks] = useState(null);\n    const [inLobby, setInLobby] = useState(true);\n    const [currentlyPlayingTrack, setCurrentlyPlayingTrack] = useState(null);\n    const [playedTracks, setPlayedTracks] = useState([]);\n    const [paused, setPaused] = useState(null);\n    const [isHost, setIsHost] = useState(false);\n    const [roomInfo, setRoomInfo] = useState({});\n    const [userName, setUserName] = useState(null);\n    const [inCeremony, setInCeremony] = useState(false);\n    const [horizontalWinner, setHorizontalWinner] = useState('No one had a horizontal bingo');\n    const [verticalWinner, setVerticalWinner] = useState('No one had a vertical bingo');\n    const [diagonalWinner, setDiagonalWinner] = useState('No one had a diagonal bingo');\n    const [blackoutWinner, setBlackoutWinner] = useState('No one had a blackout bingo');\n\n    let horizontalWinnerRef = useRef();\n    let verticalWinnerRef = useRef();\n    let diagonalWinnerRef = useRef();\n    let blackoutWinnerRef = useRef();\n\n    // const isVisible = usePageVisibility();\n    function handleVisibilityChange() {\n        if (document[hidden]) {\n            socket.disconnect();\n        } else {\n            socket.connect();\n            socket.emit('join_room', ({ userName: memUserName, userRoom: memRoom }));\n            }\n      }\n\n    useBeforeunload(() => \"Are you sure you want to quit the game? You will lose your progress!\");\n\n    async function requestNewToken() {\n        await axios.get('https://react-byngo-io.herokuapp.com/refresh_token').then(res => {\n            spotify.setAccessToken(res.data.access_token);\n        });\n    }\n\n    // When socket receives 'update' event, update states\n    useEffect(() => {\n        if(token !== null) {\n            setInterval(() => {\n                requestNewToken();\n            }, 2000000)\n        }\n\n        document.addEventListener(visibilityChange, handleVisibilityChange, false);\n\n        socket.on('room_info', ({ room, roomInfo, userName }) => {\n            memUserName = userName;\n            memRoom = room;\n            setUserName(userName);\n            setRoomInfo(roomInfo);\n            setCurrentPlayers(roomInfo.players);\n            setRoom(room);\n            setCurrentlyPlayingTrack(roomInfo.currentlyPlayingTrack);\n            setPlayedTracks(roomInfo.playedTracks);\n            if(paused === null && memPaused === null) {\n                memPaused = roomInfo.paused;\n                setPaused(roomInfo.paused);\n            }\n            setInLobby(roomInfo.inLobby);\n            setInCeremony(roomInfo.inCeremony);\n\n            if(memTracks === null) {\n                let copiedTracksArray = JSON.parse(JSON.stringify(roomInfo.tracks));\n                shuffleArr(copiedTracksArray);\n                setTracks(copiedTracksArray);\n                memTracks = roomInfo.tracks;\n            }            \n\n            for(let i = 0; i < roomInfo.players.length; i++) {\n                if(roomInfo.players[i].host) {\n                    if(roomInfo.players[i].userName === userName) {\n                        setIsHost(true)\n                    } else {\n                        return\n                    }\n                }\n            }\n        });\n\n        socket.on('players_update', ({ roomInfo }) => {\n            setCurrentPlayers(roomInfo.players);\n        });\n\n        socket.on('start_game', () => {\n            setInLobby(false)\n        });\n\n        socket.on('player_left', ({ socketId, roomPlayers }) => {\n            let updatedPlayers = []\n            for(let i = 0; i < roomPlayers.length; i++){\n                if(roomPlayers[i].id !== socketId){\n                    updatedPlayers.push(roomPlayers[i]);\n                }\n            }\n            setCurrentPlayers(updatedPlayers);\n        });\n\n        socket.on('end_game', (bingos) => {\n            horizontalWinnerRef.current = bingos.horizontal.winner;\n            verticalWinnerRef.current = bingos.vertical.winner;\n            diagonalWinnerRef.current = bingos.diagonal.winner;\n            blackoutWinnerRef.current = bingos.blackout.winner;\n\n            if(bingos.horizontal.winner !== null) {\n                \n                setHorizontalWinner(horizontalWinnerRef.current);\n            }\n            \n            if(bingos.vertical.winner !== null) {\n                \n                setVerticalWinner(verticalWinnerRef.current);\n            }\n            \n            if(bingos.diagonal.winner !== null) {\n                \n                setDiagonalWinner(diagonalWinnerRef.current);\n            }\n            \n            if(bingos.blackout.winner !== null) {\n                \n                setBlackoutWinner(blackoutWinnerRef.current);\n            }\n            \n            setInCeremony(true);\n            setInLobby(false);\n        })\n\n        socket.on(\"disconnect\", function() {\n            console.log(\"Disconnected\");\n            // socket.connect();\n          });\n          \n        socket.on(\"reconnect\", function() {\n        console.log(\"Reconnecting\");\n        \n        });\n\n    }, []);\n    \n    function shuffleArr (array){\n        for (var i = array.length - 1; i > 0; i--) {\n            var rand = Math.floor(Math.random() * (i + 1));\n            [array[i], array[rand]] = [array[rand], array[i]]\n        }\n    }\n\n    return (\n        <div>\n            <Prompt\n            when={true}\n            message='Are you sure you want to quit the bingo game?'\n            />\n            {!inLobby && !inCeremony && <Play tracks={tracks} socket={socket} currentPlayers={currentPlayers} currentlyPlayingTrack={currentlyPlayingTrack} playedTracks={playedTracks} paused={paused} setPaused={setPaused} inLobby={inLobby} setInLobby={setInLobby} setInCeremony={setInCeremony} isHost={isHost} room={room} roomInfo={roomInfo} userName={userName}/>}\n            {inLobby && <WaitingRoom room={room} currentPlayers={currentPlayers} setInLobby={setInLobby} socket={socket} isHost={isHost} />}\n            {inCeremony && !inLobby && <Ceremony room={room} horizontalWinner={horizontalWinner} verticalWinner={verticalWinner} diagonalWinner={diagonalWinner} blackoutWinner={blackoutWinner} />}\n        </div>\n    )\n}\n\nexport default Lobby\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Device/Device.js",["109"],"import React, { useState, useEffect, useRef } from 'react';\nimport './Device.css';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { useDataLayerValue } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js';\nimport { Link } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Select from \"react-dropdown-select\";\n\nfunction Device({ socket }) {\n    const [{ playlists, spotify, includeAmount, selectedPlaylist, includedTracks, user, devices, selectedDevice }, dispatch] = useDataLayerValue()\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const onOpenModal = () => setOpen(true);\n    const onCloseModal = () => setOpen(false);\n\n    let optionsRef = useRef();\n\n    function setSelectedDevice(selected) {\n        let name = selected[0].value;\n        for(let i = 0; i < devices.devices.length; i++) {\n            if(name === devices.devices[i].name) {\n                dispatch({\n                    type: \"SELECTED_DEVICE\",\n                    selectedDevice: devices.devices[i]\n                })\n                spotify.transferMyPlayback([devices.devices[i].id])\n                onCloseModal();\n                return\n            }\n        }\n    }\n\n    async function getDevices() {\n        setLoading(true)\n        await spotify.getMyDevices().then(response => {\n            dispatch({\n                type: \"SET_DEVICES\",\n                devices: response\n            })\n            let devicesToAdd = [];\n            response.devices.forEach(device => {\n                devicesToAdd.push({ value: device.name, label: device.name })\n            })\n            optionsRef.current = devicesToAdd;\n        })\n        setLoading(false);\n        \n    }\n\n    useEffect(()  => {\n        getDevices();\n\n        function shuffleArray(array) {\n            for (var i = array.length - 1; i > 0; i--) {\n                var j = Math.floor(Math.random() * (i + 1));\n                var temp = array[i];\n                array[i] = array[j];\n                array[j] = temp;\n            }\n        }\n\n        function findPlaylistId(playlist){\n            for(let i = 0; i < playlists?.items?.length; i++){\n                if(playlists?.items[i]?.name === playlist.name) {\n                    return playlists?.items[i]?.id\n                }\n            }\n        }\n\n        const getAllPlaylistTracks = async (playlistId) => {\n            if(typeof playlistId == \"undefined\"){\n                return \n            }\n\n            let allTracks = [];\n            let allTrackTitles = [];\n            let offset = 0;\n            \n            setLoading(true)\n            while(offset < 1000){\n                await spotify.getPlaylistTracks(playlistId, {\"offset\": offset}).then(response => {\n                    response.items.forEach(item => {\n                        if(item.track != null) {\n                            allTracks.push(item)\n                            allTrackTitles.push(item.track.name)\n                        }  \n                    })\n                })\n                offset += 100;\n            }\n\n            shuffleArray(allTracks);\n\n            let activeDevices; \n\n            await spotify.getMyDevices().then(response => {\n                activeDevices = response;\n            })\n\n            dispatch({\n                type: \"SET_SHUFFLED_TRACKS_ALL\",\n                shuffledTracksAll: allTracks\n            })\n\n            dispatch({\n                type: \"SET_INCLUDED_TRACKS\",\n                includedTracks: allTracks.slice(0, includeAmount)\n            })\n\n            dispatch({\n                type: \"SET_DEVICES\",\n                devices: activeDevices\n            })\n\n            setLoading(false)\n        }\n\n        let playlistId = findPlaylistId(selectedPlaylist);\n\n        getAllPlaylistTracks(playlistId)\n\n    }, [selectedPlaylist])\n\n    function createRoom() {\n        const userRoom = socket.id.substring(0, 4).toUpperCase();\n        const userName = user.id;\n        socket.emit('create_room', ({ userName, userRoom, includedTracks }))\n    }\n\n    return (\n        <div className=\"wrapper\">\n        <div className=\"navigation\">\n            {loading ? <div className=\"spinner\"><ClipLoader color=\"white\" /></div> : <div className=\"device\">\n                <h2>Select playback device</h2>\n                <p><i>Make sure your device is awake and Spotify is open.</i></p>\n                <br></br>\n                <AwesomeButton type=\"primary\" onPress={getDevices} className=\"device-button\" >REFRESH</AwesomeButton>\n                <br></br>\n                <Select searchable={false} options={optionsRef.current} onChange={setSelectedDevice} placeholder=\"Select a playback device...\" className=\"device-dropdown\" />\n                <br />\n                {/* <AwesomeButton type=\"primary\" onPress={onOpenModal} className=\"device-button\" >CHOOSE DEVICE</AwesomeButton> */}\n                {/* {selectedDevice !== null && <div className=\"device-option-selected no-hover\"><h3>{selectedDevice.name}</h3><p>{selectedDevice.type}</p></div>} */}\n                <Modal open={open} onClose={onCloseModal} center classNames={{modal: 'customModal'}}>\n                    {devices.length === 0 && <h2>No devices found. Make sure your device is active and has Spotify opened. </h2>}\n                    {devices.length !== 0 && devices.devices.map((device, index) => {\n                        return <div onClick={setSelectedDevice} className=\"device-option\" key={index}><h3>{device.name}</h3><p>{device.type}</p></div>\n                    })}\n                    <hr></hr>\n                    <p>Can't find your device? Reopen Spotify on your device and click on the button below.</p>\n                    <div className=\"refresh\">\n                    <AwesomeButton type=\"primary\" onPress={getDevices} className=\"device-button\" >REFRESH</AwesomeButton>\n                    </div>\n                </Modal>\n                \n            </div> } \n        </div>\n        <div className=\"button-next\">\n            {!loading && selectedDevice === null && <AwesomeButton type=\"secondary\" onPress={onOpenModal} disabled={true} className=\"playlist-button\">INVITE PLAYERS</AwesomeButton>}\n            {!loading && selectedDevice !== null && <Link to=\"/play\" socket={socket} onClick={createRoom}><AwesomeButton type=\"secondary\" disabled={false} className=\"playlist-button\">INVITE PLAYERS</AwesomeButton></Link>}      \n        </div>\n        </div>\n    )\n}\n\nexport default Device\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Setup.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Home/HomeButtons.js",["110","111"],"import React from 'react';\nimport './HomeButtons.css';\nimport { loginUrl } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js';\nimport { Link } from 'react-router-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from 'axios';\n\nexport function HomeButtons() {\n    \n    return(\n        <div className=\"login\">\n            <a className=\"login-button\" href='https://react-byngo-io.herokuapp.com/login'><AwesomeButton type=\"secondary\" onPress={null} className=\"device-button\" >CREATE NEW GAME</AwesomeButton></a>\n\n            <h2>OR</h2>\n            <Link to=\"/join\"><div className=\"join-button\"><AwesomeButton type=\"primary\" onPress={null} className=\"device-button\" >JOIN GAME</AwesomeButton></div></Link>\n        </div>\n    );\n}\n\nexport default HomeButtons;","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Ceremony/Ceremony.js",["112"],"import React from 'react';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport './Ceremony.css';\n\nfunction Ceremony({ room, horizontalWinner, verticalWinner, diagonalWinner, blackoutWinner }) {\n    const [{}, dispatch] = useDataLayerValue()\n\n    function removeToken() {\n        dispatch({\n            type: \"SET_TOKEN\",\n            token: null\n        })\n        window.location.href = \"https://discobyngo.com/\";\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"login-details\">\n                    <div className=\"login-url\">\n                        <p>Thanks for playing!</p>\n                        <br />\n                        <h1>Winners 🎉</h1>\n                    </div>    \n                </div>\n                \n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Horizontal ↔️</h2>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                    <p>{horizontalWinner}...</p>     \n                </div>\n                </div>\n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Vertical ↕️</h2>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                    <p>{verticalWinner}...</p>                  \n                </div>\n                </div>\n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Diagonal ↗️ </h2>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                    <p>{diagonalWinner}...</p>                     \n                </div>\n                </div>\n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Blackout ⬛</h2>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                    <p>{blackoutWinner}...</p>                    \n                </div>\n                </div>\n                <hr></hr>\n                <h4>Until next time!</h4>\n                <br />\n                <div className=\"button-next\">\n                   <AwesomeButton type=\"secondary\" disabled={false} className=\"playlist-button\" onPress={removeToken}>HOME</AwesomeButton>     \n                </div>\n                <br />\n            </div>\n        </div>\n    )\n}\n\nexport default Ceremony\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/WaitingRoom/WaitingRoom.js",["113"],"import React, { useState } from 'react';\nimport { useDataLayerValue } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js';\nimport './WaitingRoom.css';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport { WhatsappShareButton, WhatsappIcon } from 'react-share';\n\nfunction WaitingRoom({ room, currentPlayers, setInLobby, socket, isHost }) {\n    const [{}, dispatch] = useDataLayerValue();\n    const [autoPlay, setAutoPlay] = useState('full');\n    const shareURL = \"https://discobyngo.com/join\";\n    \n    function changeAutoPlay(e) {\n        let isChecked = e.target.value;\n        setAutoPlay(isChecked);\n    }\n\n    function startGame() {\n        dispatch({\n            type: \"SET_AUTO_PLAY\",\n            autoPlay: autoPlay\n        });\n        socket.emit('start_game', room);\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"login-details\">\n                    <div className=\"room-code\">\n                        <h4>Room code</h4>\n                        <h1>{room}</h1>\n                    </div>\n                    <div className=\"login-url\">\n                        <p>Join at</p>\n                        <h2>discobyngo.com/join<WhatsappShareButton url={shareURL}><WhatsappIcon round className=\"whatsapp-icon\"></WhatsappIcon></WhatsappShareButton></h2>\n                        \n                    </div>    \n                </div>\n                \n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Players</h2>\n                    <h3>{currentPlayers.length}</h3>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                                {currentPlayers.map((player, index) => {\n                                if(player.host){\n                                    return <div className=\"player-row\" key={index}><CakeIcon></CakeIcon><p><strong>{player.userName}</strong><i> created this game...</i></p></div>\n                                } else {\n                                    return <div className=\"player-row\" key={index}><PersonIcon></PersonIcon><p><strong>{player.userName}</strong> <i> joined the game...</i></p></div>\n                                }\n                            })}\n                            </div>\n                </div>\n                <hr></hr>\n                {isHost === true ? <div><input type=\"radio\" id=\"full\" name=\"playback\" value=\"full\" onChange={changeAutoPlay} defaultChecked={true}></input>\n                <label for=\"full\">Auto-skip (full songs)</label><br />\n                <input type=\"radio\" id=\"quick\" name=\"playback\" value=\"quick\" onChange={changeAutoPlay}></input>\n                <label for=\"quick\">Auto-skip (80 seconds)</label><br />\n                <input type=\"radio\" id=\"manual\" name=\"playback\" value=\"manual\" onChange={changeAutoPlay}></input>\n                <label for=\"manual\">Manual</label><AwesomeButton type=\"secondary\" onPress={startGame} disabled={false} className=\"playlist-button\">Start Game</AwesomeButton></div> : <h4>Waiting for the host to start the game...</h4>}\n            </div>\n        </div>\n    )\n}\n\nexport default WaitingRoom\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/Play.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useEffect, useState, useRef } from 'react';\nimport './Play.css';\nimport PlaybackOptions from '../Play/PlaybackOptions/PlaybackOptions';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport PlayingTrack from './PlayingTrack';\nimport \"react-awesome-button/dist/styles.css\";\nimport BingoTypes from './BingoTypes';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ReactTooltip from 'react-tooltip';\nimport Sidebar from \"react-sidebar\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nfunction Play({ tracks, socket, currentPlayers, currentlyPlayingTrack, paused, setPaused, inLobby, isHost, room, roomInfo, userName, setInCeremony, setInLobby }) {\n    const [openTrackModal, setOpenTrackModal] = useState(false);\n    const [openBingoModal, setOpenBingoModal] = useState(false);\n    const [openHorizontalWinnerModal, setOpenHorizontalWinnerModal] = useState(true)\n    const [openVerticalWinnerModal, setOpenVerticalWinnerModal] = useState(true)\n    const [openDiagonalWinnerModal, setOpenDiagonalWinnerModal] = useState(true)\n    const [openBlackoutWinnerModal, setOpenBlackoutWinnerModal] = useState(true)\n    const [openEndGameModal, setOpenEndGameModal] = useState(false);\n    const [currentTrack, setCurrentTrack] = useState(null);\n    const [playedTracks, setPlayedTracks] = useState([]);\n    \n    const [bingo, setBingo] = useState(true);\n    const [horizontalTaken, setHorizontalTaken] = useState(false);\n    const [horizontalWinner, setHorizontalWinner] = useState(null);\n    const [verticalWinner, setVerticalWinner] = useState(null);\n    const [diagonalWinner, setDiagonalWinner] = useState(null);\n    const [blackoutWinner, setBlackoutWinner] = useState(null);\n    const [verticalTaken, setVerticalTaken] = useState(false);\n    const [diagonalTaken, setDiagonalTaken] = useState(false);\n    const [blackoutTaken, setBlackoutTaken] = useState(false);\n    const [horizontal, setHorizontal] = useState(false);\n    const [vertical, setVertical] = useState(false);\n    const [diagonal, setDiagonal] = useState(false);\n    const [blackout, setBlackout] = useState(false);\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    const onOpenTrackModal = () => setOpenTrackModal(true);\n    const onCloseTrackModal = () => setOpenTrackModal(false);\n    const onOpenBingoModal = () => setOpenBingoModal(true);\n    const onCloseBingoModal = () => setOpenBingoModal(false);\n    const onSetSidebarOpen = () => setSidebarOpen(true);\n    const onSetSidebarClose = () => setSidebarOpen(false);\n    const onCloseHorizontalWinnerModal = () => setOpenHorizontalWinnerModal(false);\n    const onCloseVerticalWinnerModal = () => setOpenVerticalWinnerModal(false)\n    const onCloseDiagonalWinnerModal = () => setOpenDiagonalWinnerModal(false)\n    const onCloseBlackoutWinnerModal = () => setOpenBlackoutWinnerModal(false)\n    const onOpenEndGameModal = () => setOpenEndGameModal(true)\n    const onCloseEndGameModal = () => setOpenEndGameModal(false)\n    \n    let playedTracksRef = useRef();\n    let horizontalWinnerRef = useRef();\n    let verticalWinnerRef = useRef();\n    let diagonalWinnerRef = useRef();\n    let blackoutWinnerRef = useRef();\n\n    function changeColor(e) {\n\n        let clickedTag = e.target.tagName;\n        let clicked = e.target\n\n        if(clickedTag === 'DIV') {\n            if(clicked.style.backgroundColor === '') {\n                clicked.style.backgroundColor = 'white'\n            }\n    \n            return clicked.style.backgroundColor === 'white' ? clicked.style.backgroundColor = '#A6FF96' : clicked.style.backgroundColor = 'white'\n        }\n\n        if(clickedTag === 'P' || clickedTag === 'STRONG'){\n            if(clicked.parentNode.style.backgroundColor === '') {\n                clicked.parentNode.style.backgroundColor = 'white'\n            }\n\n            return clicked.parentNode.style.backgroundColor === 'white' ? clicked.parentNode.style.backgroundColor = '#A6FF96' : clicked.parentNode.style.backgroundColor = 'white'\n        }\n    }\n\n    function endGame() {\n        socket.emit('end_game', room);\n    }\n\n    useEffect(() => {\n        setHorizontal(roomInfo.bingos.horizontal.taken);\n        setVertical(roomInfo.bingos.vertical.taken);\n        setDiagonal(roomInfo.bingos.diagonal.taken);\n        setBlackout(roomInfo.bingos.blackout.taken);\n\n        socket.on('room_info', data => {\n            horizontalWinnerRef.current = data.roomInfo.bingos.horizontal.winner\n            verticalWinnerRef.current = data.roomInfo.bingos.vertical.winner\n            diagonalWinnerRef.current = data.roomInfo.bingos.diagonal.winner\n            blackoutWinnerRef.current = data.roomInfo.bingos.blackout.winner\n            setCurrentTrack(data.roomInfo.playedTracks[data.roomInfo.playedTracks.length-1]);\n            playedTracksRef.current = data.roomInfo.playedTracks;\n            setPlayedTracks(playedTracksRef.current);\n            setHorizontal(data.roomInfo.bingos.horizontal.taken);\n            setVertical(data.roomInfo.bingos.vertical.taken);\n            setDiagonal(data.roomInfo.bingos.diagonal.taken);\n            setBlackout(data.roomInfo.bingos.blackout.taken);\n            setHorizontalWinner(horizontalWinnerRef.current);\n            setVerticalWinner(verticalWinnerRef.current);\n            setDiagonalWinner(diagonalWinnerRef.current);\n            setBlackoutWinner(blackoutWinnerRef.current);           \n        })\n\n        socket.on('playing_track', playingTrack => {\n            setCurrentTrack(playingTrack)\n            setPlayedTracks(playedTracks => [...playedTracks, playingTrack])\n        })\n\n        socket.on('horizontal_bingo', (userName) => {\n            setHorizontalWinner(userName)\n            setHorizontalTaken(true);\n            window.navigator.vibrate(200)\n            setTimeout(() => {setHorizontalTaken(false)}, 4000);\n            setHorizontal(true);\n        })\n\n        socket.on('vertical_bingo', (userName) => {\n            setVerticalWinner(userName)\n            setVerticalTaken(true);\n            window.navigator.vibrate(200)\n            setTimeout(() => {setVerticalTaken(false)}, 4000);\n            setVertical(true);\n        })\n\n        socket.on('diagonal_bingo', (userName) => {\n            setDiagonalWinner(userName)\n            setDiagonalTaken(true);\n            window.navigator.vibrate(200)\n            setTimeout(() => {setDiagonalTaken(false)}, 4000);\n            setDiagonal(true);\n        })\n\n        socket.on('blackout_bingo', (userName) => {\n            setBlackoutWinner(userName)\n            setBlackoutTaken(true);\n            window.navigator.vibrate(200)\n            setTimeout(() => {setBlackoutTaken(false)}, 4000);\n            setBlackout(true);\n        })\n\n        socket.on('bingos_update', roomInfo => {\n            setHorizontalTaken(roomInfo.bingos.horizontal.taken)\n            setVerticalTaken(roomInfo.bingos.vertical.taken)\n            setDiagonalTaken(roomInfo.bingos.diagonal.taken)\n            setBlackoutTaken(roomInfo.bingos.blackout.taken)\n            setHorizontal(roomInfo.bingos.horizontal.taken);\n            setVertical(roomInfo.bingos.vertical.taken);\n            setDiagonal(roomInfo.bingos.diagonal.taken);\n            setBlackout(roomInfo.bingos.blackout.taken);\n        })\n    }, [])\n    \n    return (\n        \n        <div>\n            {tracks === null ? <div className=\"spinner\"><ClipLoader color=\"white\" /></div> : <Sidebar\n            sidebar={(<div className=\"sidebar-content\"><h2 className=\"sidebar-title\">Players</h2><hr /><div className=\"players-sidebar-container\">{currentPlayers.map(player => {return <div className=\"player-sidebar\"><PersonIcon></PersonIcon><strong className=\"player-name-sidebar\">{player.userName}</strong></div>})}</div></div>)}\n            open={sidebarOpen}\n            onSetOpen={onSetSidebarClose}\n            pullRight={true}\n            styles={{ sidebar: { background: \"#182335\", color: \"white\", zIndex: \"3\" }, overlay: { zIndex: \"2\" } }}\n        >\n        \n            \n            {horizontalTaken ? <Modal open={openHorizontalWinnerModal} onClose={onCloseHorizontalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {horizontalWinner} had a horizontal bingo!🎉</p></Modal> : null}\n            {verticalTaken ? <Modal open={openVerticalWinnerModal} onClose={onCloseVerticalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {verticalWinner} had a vertical bingo! 🎉</p></Modal> : null}\n            {diagonalTaken ? <Modal open={openDiagonalWinnerModal} onClose={onCloseDiagonalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {diagonalWinner} had a diagonal bingo! 🎉</p></Modal> : null}\n            {blackoutTaken ? <Modal open={openBlackoutWinnerModal} onClose={onCloseBlackoutWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {blackoutWinner} had a blackout bingo! 🎉</p></Modal> : null}\n\n            {currentTrack !== null ? <Modal open={openTrackModal} showCloseIcon={true} onClose={onCloseTrackModal} center classNames={{modal: 'customModal'}}><PlayingTrack currentTrack={currentTrack} /></Modal> : <Modal open={openTrackModal} showCloseIcon={false} onClose={onCloseTrackModal} center classNames={{modal: 'customModal'}}><p>No track playing</p></Modal>}\n\n            <div className=\"bingo-container\"> \n                <table className=\"table\">\n                \n                    <thead>\n                        <tr><th colSpan=\"5\"><div className=\"head-container\"><ReactTooltip /><span className=\"room-code-head\" data-tip=\"Room code\">{room}</span><p>DISCO BYNGO</p><div className=\"active-players-head\" onClick={onSetSidebarOpen} ><PersonIcon></PersonIcon><p>{currentPlayers.length}</p></div></div></th></tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className=\"corner-lt\" onClick={changeColor} style={{backgroundColor: \"white\"}}><div className=\"content\" ><p>{tracks[0]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[0]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[1]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[1]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[2]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[2]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[3]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[3]?.track?.artists[0]?.name}</strong></div></td>\n                            <td className=\"corner-rt\" onClick={changeColor}><div className=\"content\"><p>{tracks[4]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[4]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[5]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[5]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[6]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[6]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[7]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[7]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[8]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[8]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[9]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[9]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[10]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[10]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[11]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[11]?.track?.artists[0]?.name}</strong></div></td>\n                            <td><div className=\"content free-space\"><h3>FREE SPACE</h3></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[12]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[12]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[13]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[13]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[14]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[14]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[15]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[15]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[16]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[16]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[17]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[17]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[18]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[18]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td className=\"corner-lb\" onClick={changeColor}><div className=\"content\"><p>{tracks[19]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[19]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[20]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[20]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[21]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[21]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[22]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[22]?.track?.artists[0]?.name}</strong></div></td>\n                            <td className=\"corner-rb\" onClick={changeColor}><div className=\"content\"><p>{tracks[23]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[23]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div className=\"action-buttons\">\n                    <AwesomeButton type=\"secondary\" onPress={onOpenTrackModal} className=\"device-button track-button\" >SONG</AwesomeButton>\n\n                    {!bingo ? <AwesomeButton type=\"secondary\" onPress={onOpenTrackModal} className=\"device-button bingo-button\" disabled={true}>CALL BINGO</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={onOpenBingoModal} className=\"device-button bingo-button\">BINGO</AwesomeButton>} \n\n                    {isHost === true && <AwesomeButton type=\"primary\" onPress={onOpenEndGameModal} className=\"device-button end-button\">END GAME</AwesomeButton>}\n\n                    <Modal open={openEndGameModal} showCloseIcon={false} onClose={onCloseEndGameModal} center classNames={{modal: 'customModal'}}><div className=\"end-game-modal\"><h2>Are you sure?</h2><p className=\"end-game-p\">You will end the game for all players and go to the award ceremony.</p><AwesomeButton type=\"secondary\" onPress={endGame} className=\"device-button bingo-button\">YES, END GAME</AwesomeButton><br /><AwesomeButton type=\"primary\" onPress={onCloseEndGameModal} className=\"device-button bingo-button\">NO, RETURN TO GAME</AwesomeButton></div></Modal>\n                \n                    <Modal open={openBingoModal} showCloseIcon={true} onClose={onCloseBingoModal} center classNames={{modal: 'customModal bingoModal'}}><BingoTypes playedTracks={playedTracks} tracks={tracks} socket={socket} horizontal={horizontal} vertical={vertical} diagonal={diagonal} blackout={blackout} room={room} userName={userName} horizontalWinner={horizontalWinner} verticalWinner={verticalWinner} diagonalWinner={diagonalWinner} blackoutWinner={blackoutWinner}/></Modal>\n                </div>\n            </div>\n        {<h1>{currentlyPlayingTrack}</h1>}\n\n        {isHost === true ? <div><PlaybackOptions tracks={tracks} socket={socket} currentPlayers={currentPlayers} paused={paused} setPaused={setPaused} inLobby={inLobby} room={room} /></div>: null}\n        </Sidebar>}\n            \n        </div>\n        \n    )\n}\n\nexport default Play\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Navigation/Navigation.js",["140","141"],"import React, { useEffect } from 'react';\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport './Navigation.css';\nimport { Link } from 'react-router-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\n\nexport function Navigation({ socket }) {\n    \n    const [{ currentItem, selectedPlaylist, user, includedTracks }, dispatch] = useDataLayerValue();\n\n    function dispatchCurrentItem(item) {\n        dispatch({\n            type: \"SET_CURRENT_ITEM\",\n            currentItem: item\n        })\n    }\n\n    function nextItem() {\n        if(selectedPlaylist == null) {\n            return alert('Select a playlist');\n        }\n\n        if(selectedPlaylist.tracks.total < 45){\n            return alert(`It is recommended to select a playlist with 45 or more songs. Try adding at least ${45 - selectedPlaylist.tracks.total} songs to your ${selectedPlaylist.name} playlist.`)\n        }\n\n        switch(currentItem) {\n            case \"select-playlist\":\n                return dispatchCurrentItem(\"card-preview\");\n            default: return;\n        }\n    }\n\n    useEffect(() => {\n\n    }, [currentItem])\n    \n    return (\n        <div className=\"navigation\">\n            {selectedPlaylist === null ? <AwesomeButton type=\"primary\" className=\"playlist-button\" disabled={true} onPress={nextItem} >CONTINUE</AwesomeButton> : <Link to=\"/device\" className=\"playlist-button\"><AwesomeButton type=\"secondary\" className=\"playlist-button\" disabled={false} onPress={nextItem}>CONTINUE</AwesomeButton></Link>}\n\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/SelectPlaylist.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/LightBox.js",[],["142","143"],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/PlayingTrack.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/BingoTypes.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Game/Play/PlaybackOptions/PlaybackOptions.js",["144","145"],"import React, { useEffect, useState, useRef } from 'react';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport './PlaybackOptions.css';\nimport { useDataLayerValue } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js';\n\nfunction PlaybackOptions({ tracks, socket, currentPlayers, paused, setPaused, inLobby, room }) {\n    const [{ spotify, selectedDevice, autoPlay }] = useDataLayerValue();\n    const [seconds, setSeconds] = useState(0);\n\n    let currentSecRef = useRef(80);\n    let isPausedRef = useRef(true);\n    let intervalRef = useRef();\n    let orderRef = useRef();\n    let currentSongRef = useRef(0);\n\n    let secondsPerSong;\n    let minutes = Math.floor(currentSecRef.current / 60);\n    let remainingSeconds = currentSecRef.current - minutes * 60;\n  \n    const decreaseSec = () => setSeconds((prev) => prev - 1);\n    \n    useEffect(() => {\n\n        let copy = JSON.parse(JSON.stringify(tracks))\n        shuffleArr(copy);\n        orderRef.current = copy\n\n        if(autoPlay !== 'manual') {\n            intervalRef.current = setInterval(decreaseSec, 1000);\n\n            playSong();\n\n            setInterval(function() {\n                if(currentSecRef.current <= 0) {\n                    nextSong();\n                    currentSecRef.current = secondsPerSong;\n                }\n                if(!isPausedRef.current) {\n                    currentSecRef.current -= 1;\n                }\n            }, 1000)\n        }\n    }, [])\n\n    function shuffleArr (array){\n        for (var i = array.length - 1; i > 0; i--) {\n            var rand = Math.floor(Math.random() * (i + 1));\n            [array[i], array[rand]] = [array[rand], array[i]]\n        }\n    }\n\n    function playSong() {\n        if(currentSongRef.current === 0) {\n            if(autoPlay === 'full') {\n                currentSecRef.current = Math.floor((orderRef.current[currentSongRef.current].track.duration_ms)/1000);\n                secondsPerSong = Math.floor((orderRef.current[currentSongRef.current].track.duration_ms)/1000);\n            } else if (autoPlay === 'quick') {\n                currentSecRef.current = 80;\n                secondsPerSong = 80;\n            }\n            setSeconds(0);\n            spotify.play({\"uris\": [orderRef.current[currentSongRef.current].track.uri], device_id: selectedDevice.id});\n        } else {\n            spotify.play({device_id: selectedDevice.id});\n        }\n        isPausedRef.current = false;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));  \n    }\n\n    function pauseSong() {\n        spotify.pause();\n        isPausedRef.current = true\n        setPaused(true)\n        socket.emit('playing_track', ({room: room}))\n    }\n\n    function nextSong() {  \n        if(autoPlay === 'full') {\n            secondsPerSong = Math.floor((orderRef.current[currentSongRef.current+1].track.duration_ms)/1000);\n            currentSecRef.current = Math.floor((orderRef.current[currentSongRef.current+1].track.duration_ms)/1000);\n        } else if (autoPlay === 'quick') {\n            currentSecRef.current = 80;\n            secondsPerSong = 80;\n        }\n        spotify.play({\"uris\": [orderRef.current[currentSongRef.current+1]?.track?.uri]});  \n        currentSongRef.current += 1;\n        isPausedRef.current = false;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));\n        setSeconds(0); \n    }\n\n    function previousSong() {\n        if(autoPlay === 'full') {\n            secondsPerSong = Math.floor((orderRef.current[currentSongRef.current-1].track.duration_ms)/1000);\n            currentSecRef.current = Math.floor((orderRef.current[currentSongRef.current-1].track.duration_ms)/1000);\n        } else if (autoPlay === 'quick') {\n            currentSecRef.current = 80;\n            secondsPerSong = 80;\n        }\n        spotify.play({\"uris\": [orderRef.current[currentSongRef.current-1].track.uri]});\n        currentSongRef.current -= 1;\n        isPausedRef.current = false;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));\n        setSeconds(0); \n    }   \n \n    return (\n        <div className=\"playback-options\">\n            \n            {currentSongRef.current !== 0 ? <SkipPreviousIcon fontSize=\"large\" className=\"option\" onClick={previousSong}/> : <SkipPreviousIcon fontSize=\"large\" className=\"option first\" />}\n            {!paused ? <PauseCircleOutlineIcon fontSize=\"large\" className=\"option\" onClick={pauseSong}/> : <PlayCircleOutlineIcon fontSize=\"large\" className=\"option\" onClick={playSong}/>}\n            {currentSongRef.current !== tracks.length-1 ?<SkipNextIcon fontSize=\"large\" className=\"option\" onClick={nextSong}/> : <SkipNextIcon fontSize=\"large\" className=\"option first\" />}\n            {autoPlay !== 'manual' && <div className=\"counter\">0{minutes}:{remainingSeconds < 10 && <div>0</div>}{remainingSeconds}</div>}\n        </div>\n    )\n}\n\nexport default PlaybackOptions\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Configuration/Playlist/ModalPlaylistRow.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":58,"column":6,"nodeType":"152","endLine":58,"endColumn":8,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":171,"column":8,"nodeType":"152","endLine":171,"endColumn":10,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":126,"column":8,"nodeType":"152","endLine":126,"endColumn":26,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":18},{"ruleId":"158","severity":1,"message":"162","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":8,"column":12,"nodeType":"165","messageId":"166","endLine":8,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":14},{"ruleId":"158","severity":1,"message":"167","line":27,"column":19,"nodeType":"160","messageId":"161","endLine":27,"endColumn":27},{"ruleId":"150","severity":1,"message":"168","line":158,"column":8,"nodeType":"152","endLine":158,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":187,"column":172,"nodeType":"172","messageId":"173","endLine":187,"endColumn":173,"suggestions":"174"},{"ruleId":"170","severity":1,"message":"171","line":188,"column":114,"nodeType":"172","messageId":"173","endLine":188,"endColumn":115,"suggestions":"175"},{"ruleId":"170","severity":1,"message":"171","line":189,"column":114,"nodeType":"172","messageId":"173","endLine":189,"endColumn":115,"suggestions":"176"},{"ruleId":"170","severity":1,"message":"171","line":190,"column":114,"nodeType":"172","messageId":"173","endLine":190,"endColumn":115,"suggestions":"177"},{"ruleId":"170","severity":1,"message":"171","line":191,"column":136,"nodeType":"172","messageId":"173","endLine":191,"endColumn":137,"suggestions":"178"},{"ruleId":"170","severity":1,"message":"171","line":194,"column":114,"nodeType":"172","messageId":"173","endLine":194,"endColumn":115,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"171","line":195,"column":114,"nodeType":"172","messageId":"173","endLine":195,"endColumn":115,"suggestions":"180"},{"ruleId":"170","severity":1,"message":"171","line":196,"column":114,"nodeType":"172","messageId":"173","endLine":196,"endColumn":115,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"171","line":197,"column":114,"nodeType":"172","messageId":"173","endLine":197,"endColumn":115,"suggestions":"182"},{"ruleId":"170","severity":1,"message":"171","line":198,"column":114,"nodeType":"172","messageId":"173","endLine":198,"endColumn":115,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"171","line":201,"column":115,"nodeType":"172","messageId":"173","endLine":201,"endColumn":116,"suggestions":"184"},{"ruleId":"170","severity":1,"message":"171","line":202,"column":115,"nodeType":"172","messageId":"173","endLine":202,"endColumn":116,"suggestions":"185"},{"ruleId":"170","severity":1,"message":"171","line":204,"column":115,"nodeType":"172","messageId":"173","endLine":204,"endColumn":116,"suggestions":"186"},{"ruleId":"170","severity":1,"message":"171","line":205,"column":115,"nodeType":"172","messageId":"173","endLine":205,"endColumn":116,"suggestions":"187"},{"ruleId":"170","severity":1,"message":"171","line":208,"column":115,"nodeType":"172","messageId":"173","endLine":208,"endColumn":116,"suggestions":"188"},{"ruleId":"170","severity":1,"message":"171","line":209,"column":115,"nodeType":"172","messageId":"173","endLine":209,"endColumn":116,"suggestions":"189"},{"ruleId":"170","severity":1,"message":"171","line":210,"column":115,"nodeType":"172","messageId":"173","endLine":210,"endColumn":116,"suggestions":"190"},{"ruleId":"170","severity":1,"message":"171","line":211,"column":115,"nodeType":"172","messageId":"173","endLine":211,"endColumn":116,"suggestions":"191"},{"ruleId":"170","severity":1,"message":"171","line":212,"column":115,"nodeType":"172","messageId":"173","endLine":212,"endColumn":116,"suggestions":"192"},{"ruleId":"170","severity":1,"message":"171","line":215,"column":137,"nodeType":"172","messageId":"173","endLine":215,"endColumn":138,"suggestions":"193"},{"ruleId":"170","severity":1,"message":"171","line":216,"column":115,"nodeType":"172","messageId":"173","endLine":216,"endColumn":116,"suggestions":"194"},{"ruleId":"170","severity":1,"message":"171","line":217,"column":115,"nodeType":"172","messageId":"173","endLine":217,"endColumn":116,"suggestions":"195"},{"ruleId":"170","severity":1,"message":"171","line":218,"column":115,"nodeType":"172","messageId":"173","endLine":218,"endColumn":116,"suggestions":"196"},{"ruleId":"170","severity":1,"message":"171","line":219,"column":137,"nodeType":"172","messageId":"173","endLine":219,"endColumn":138,"suggestions":"197"},{"ruleId":"158","severity":1,"message":"198","line":10,"column":45,"nodeType":"160","messageId":"161","endLine":10,"endColumn":49},{"ruleId":"158","severity":1,"message":"199","line":10,"column":51,"nodeType":"160","messageId":"161","endLine":10,"endColumn":65},{"ruleId":"146","replacedBy":"200"},{"ruleId":"148","replacedBy":"201"},{"ruleId":"158","severity":1,"message":"202","line":11,"column":12,"nodeType":"160","messageId":"161","endLine":11,"endColumn":19},{"ruleId":"150","severity":1,"message":"203","line":46,"column":8,"nodeType":"152","endLine":46,"endColumn":10,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has missing dependencies: 'handleVisibilityChange', 'paused', 'requestNewToken', 'socket', and 'token'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'dispatch', 'getDevices', 'includeAmount', 'playlists?.items', and 'spotify'. Either include them or remove the dependency array.",["209"],"no-unused-vars","'loginUrl' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setBingo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomInfo.bingos.blackout.taken', 'roomInfo.bingos.diagonal.taken', 'roomInfo.bingos.horizontal.taken', 'roomInfo.bingos.vertical.taken', and 'socket'. Either include them or remove the dependency array. If 'setHorizontal' needs the current value of 'roomInfo.bingos.horizontal.taken', you can also switch to useReducer instead of useState and read 'roomInfo.bingos.horizontal.taken' in the reducer.",["210"],"no-useless-escape","Unnecessary escape character: \\ .","Literal","unnecessaryEscape",["211","212"],["213","214"],["215","216"],["217","218"],["219","220"],["221","222"],["223","224"],["225","226"],["227","228"],["229","230"],["231","232"],["233","234"],["235","236"],["237","238"],["239","240"],["241","242"],["243","244"],["245","246"],["247","248"],["249","250"],["251","252"],["253","254"],["255","256"],["257","258"],"'user' is assigned a value but never used.","'includedTracks' is assigned a value but never used.",["205"],["206"],"'seconds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'autoPlay', 'nextSong', 'playSong', 'secondsPerSong', and 'tracks'. Either include them or remove the dependency array.",["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"messageId":"268","fix":"269","desc":"270"},{"messageId":"271","fix":"272","desc":"273"},{"messageId":"268","fix":"274","desc":"270"},{"messageId":"271","fix":"275","desc":"273"},{"messageId":"268","fix":"276","desc":"270"},{"messageId":"271","fix":"277","desc":"273"},{"messageId":"268","fix":"278","desc":"270"},{"messageId":"271","fix":"279","desc":"273"},{"messageId":"268","fix":"280","desc":"270"},{"messageId":"271","fix":"281","desc":"273"},{"messageId":"268","fix":"282","desc":"270"},{"messageId":"271","fix":"283","desc":"273"},{"messageId":"268","fix":"284","desc":"270"},{"messageId":"271","fix":"285","desc":"273"},{"messageId":"268","fix":"286","desc":"270"},{"messageId":"271","fix":"287","desc":"273"},{"messageId":"268","fix":"288","desc":"270"},{"messageId":"271","fix":"289","desc":"273"},{"messageId":"268","fix":"290","desc":"270"},{"messageId":"271","fix":"291","desc":"273"},{"messageId":"268","fix":"292","desc":"270"},{"messageId":"271","fix":"293","desc":"273"},{"messageId":"268","fix":"294","desc":"270"},{"messageId":"271","fix":"295","desc":"273"},{"messageId":"268","fix":"296","desc":"270"},{"messageId":"271","fix":"297","desc":"273"},{"messageId":"268","fix":"298","desc":"270"},{"messageId":"271","fix":"299","desc":"273"},{"messageId":"268","fix":"300","desc":"270"},{"messageId":"271","fix":"301","desc":"273"},{"messageId":"268","fix":"302","desc":"270"},{"messageId":"271","fix":"303","desc":"273"},{"messageId":"268","fix":"304","desc":"270"},{"messageId":"271","fix":"305","desc":"273"},{"messageId":"268","fix":"306","desc":"270"},{"messageId":"271","fix":"307","desc":"273"},{"messageId":"268","fix":"308","desc":"270"},{"messageId":"271","fix":"309","desc":"273"},{"messageId":"268","fix":"310","desc":"270"},{"messageId":"271","fix":"311","desc":"273"},{"messageId":"268","fix":"312","desc":"270"},{"messageId":"271","fix":"313","desc":"273"},{"messageId":"268","fix":"314","desc":"270"},{"messageId":"271","fix":"315","desc":"273"},{"messageId":"268","fix":"316","desc":"270"},{"messageId":"271","fix":"317","desc":"273"},{"messageId":"268","fix":"318","desc":"270"},{"messageId":"271","fix":"319","desc":"273"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [dispatch]",{"range":"322","text":"323"},"Update the dependencies array to be: [handleVisibilityChange, paused, requestNewToken, socket, token]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, getDevices, includeAmount, playlists?.items, selectedPlaylist, spotify]",{"range":"326","text":"327"},"Update the dependencies array to be: [roomInfo.bingos.blackout.taken, roomInfo.bingos.diagonal.taken, roomInfo.bingos.horizontal.taken, roomInfo.bingos.vertical.taken, socket]",{"range":"328","text":"329"},"removeEscape",{"range":"330","text":"331"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"332","text":"333"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"334","text":"331"},{"range":"335","text":"333"},{"range":"336","text":"331"},{"range":"337","text":"333"},{"range":"338","text":"331"},{"range":"339","text":"333"},{"range":"340","text":"331"},{"range":"341","text":"333"},{"range":"342","text":"331"},{"range":"343","text":"333"},{"range":"344","text":"331"},{"range":"345","text":"333"},{"range":"346","text":"331"},{"range":"347","text":"333"},{"range":"348","text":"331"},{"range":"349","text":"333"},{"range":"350","text":"331"},{"range":"351","text":"333"},{"range":"352","text":"331"},{"range":"353","text":"333"},{"range":"354","text":"331"},{"range":"355","text":"333"},{"range":"356","text":"331"},{"range":"357","text":"333"},{"range":"358","text":"331"},{"range":"359","text":"333"},{"range":"360","text":"331"},{"range":"361","text":"333"},{"range":"362","text":"331"},{"range":"363","text":"333"},{"range":"364","text":"331"},{"range":"365","text":"333"},{"range":"366","text":"331"},{"range":"367","text":"333"},{"range":"368","text":"331"},{"range":"369","text":"333"},{"range":"370","text":"331"},{"range":"371","text":"333"},{"range":"372","text":"331"},{"range":"373","text":"333"},{"range":"374","text":"331"},{"range":"375","text":"333"},{"range":"376","text":"331"},{"range":"377","text":"333"},{"range":"378","text":"331"},{"range":"379","text":"333"},"Update the dependencies array to be: [autoPlay, nextSong, playSong, secondsPerSong, tracks]",{"range":"380","text":"381"},[1675,1677],"[dispatch]",[6397,6399],"[handleVisibilityChange, paused, requestNewToken, socket, token]",[4033,4051],"[dispatch, getDevices, includeAmount, playlists?.items, selectedPlaylist, spotify]",[7335,7337],"[roomInfo.bingos.blackout.taken, roomInfo.bingos.diagonal.taken, roomInfo.bingos.horizontal.taken, roomInfo.bingos.vertical.taken, socket]",[10100,10101],"",[10100,10100],"\\",[10305,10306],[10305,10305],[10510,10511],[10510,10510],[10715,10716],[10715,10715],[10942,10943],[10942,10942],[11206,11207],[11206,11206],[11411,11412],[11411,11411],[11616,11617],[11616,11616],[11821,11822],[11821,11821],[12026,12027],[12026,12026],[12291,12292],[12291,12291],[12498,12499],[12498,12498],[12804,12805],[12804,12804],[13011,13012],[13011,13011],[13277,13278],[13277,13277],[13484,13485],[13484,13484],[13691,13692],[13691,13691],[13898,13899],[13898,13898],[14105,14106],[14105,14105],[14393,14394],[14393,14393],[14600,14601],[14600,14600],[14807,14808],[14807,14807],[15014,15015],[15014,15014],[15243,15244],[15243,15243],[1711,1713],"[autoPlay, nextSong, playSong, secondsPerSong, tracks]"]