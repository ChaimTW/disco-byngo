[{"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/index.js":"1","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js":"2","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/reducer.js":"3","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/App.js":"4","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/reportWebVitals.js":"5","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js":"6","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Login.js":"7","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Setup.js":"8","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Header/Header.js":"9","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/LightBox.js":"10","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Navigation.js":"11","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/SetupContainerRight.js":"12","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/SetupContainerLeft.js":"13","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/SelectPlaylistLeft.js":"14","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardSettingsLeft.js":"15","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShowPlaylistsRight/ShowPlaylistsRight.js":"16","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShowPlaylistsRight/PlaylistRow.js":"17","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardSettingsRight.js":"18","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/NavigationButtonNext.js":"19","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/NavigationButtonBack.js":"20","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShufflePreview.js":"21","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardPreview.js":"22","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Share/Share.js":"23","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/shared/Home.js":"24","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Share/GeneratedCard.js":"25","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Join.js":"26","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Lobby.js":"27","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/WaitingRoom.js":"28","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/Play.js":"29","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/PlaybackOptions/PlaybackOptions.js":"30","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Device.js":"31","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/PlayingTrack.js":"32","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/BingoTypes.js":"33"},{"size":891,"mtime":1612860614942,"results":"34","hashOfConfig":"35"},{"size":409,"mtime":1611308772675,"results":"36","hashOfConfig":"35"},{"size":2438,"mtime":1613642070525,"results":"37","hashOfConfig":"35"},{"size":2008,"mtime":1613733559825,"results":"38","hashOfConfig":"35"},{"size":362,"mtime":1611308484775,"results":"39","hashOfConfig":"35"},{"size":1043,"mtime":1613733606654,"results":"40","hashOfConfig":"35"},{"size":789,"mtime":1613577974990,"results":"41","hashOfConfig":"35"},{"size":529,"mtime":1612782225431,"results":"42","hashOfConfig":"35"},{"size":515,"mtime":1611659257434,"results":"43","hashOfConfig":"35"},{"size":430,"mtime":1612782053908,"results":"44","hashOfConfig":"35"},{"size":1734,"mtime":1612876466065,"results":"45","hashOfConfig":"35"},{"size":1375,"mtime":1612791049713,"results":"46","hashOfConfig":"35"},{"size":1311,"mtime":1612431773702,"results":"47","hashOfConfig":"35"},{"size":1466,"mtime":1612432298706,"results":"48","hashOfConfig":"35"},{"size":1440,"mtime":1611445807899,"results":"49","hashOfConfig":"35"},{"size":2487,"mtime":1613398722927,"results":"50","hashOfConfig":"35"},{"size":808,"mtime":1612823252954,"results":"51","hashOfConfig":"35"},{"size":1566,"mtime":1611445943774,"results":"52","hashOfConfig":"35"},{"size":1814,"mtime":1612435073109,"results":"53","hashOfConfig":"35"},{"size":845,"mtime":1612432721595,"results":"54","hashOfConfig":"35"},{"size":1244,"mtime":1612442460753,"results":"55","hashOfConfig":"35"},{"size":5384,"mtime":1612545512611,"results":"56","hashOfConfig":"35"},{"size":675,"mtime":1612182537878,"results":"57","hashOfConfig":"35"},{"size":1738,"mtime":1612446649175,"results":"58","hashOfConfig":"35"},{"size":4811,"mtime":1612096893868,"results":"59","hashOfConfig":"35"},{"size":1323,"mtime":1613397668044,"results":"60","hashOfConfig":"35"},{"size":4858,"mtime":1613737708561,"results":"61","hashOfConfig":"35"},{"size":2947,"mtime":1613642130939,"results":"62","hashOfConfig":"35"},{"size":15504,"mtime":1613577888924,"results":"63","hashOfConfig":"35"},{"size":4174,"mtime":1613664735375,"results":"64","hashOfConfig":"35"},{"size":6092,"mtime":1613398811437,"results":"65","hashOfConfig":"35"},{"size":470,"mtime":1613053666026,"results":"66","hashOfConfig":"35"},{"size":9266,"mtime":1613577981872,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1ikzjc4",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/index.js",[],["149","150"],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/reducer.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/App.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/reportWebVitals.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/spotify-api-logic/spotify-api-logic.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Login.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Setup.js",["151"],"import React from 'react';\nimport './Setup.css';\nimport 'react-dropdown/style.css';\nimport { Header } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Header/Header.js';\nimport { LightBox } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/LightBox.js';\n\nexport function Setup({ spotify, socket }) {\n\n    return(\n        <div className=\"body\">\n            <LightBox spotify={spotify} socket={socket} className=\"lightbox\"/>\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Header/Header.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/LightBox.js",["152"],"import React from 'react';\nimport './LightBox.css';\nimport { SetupContainerLeft } from './SetupContainerLeft';\nimport { SetupContainerRight } from './SetupContainerRight';\nimport { Navigation } from './Navigation';\n\nexport function LightBox({ spotify, socket }) {\n\n    return (\n        <div className=\"lightbox\">\n            <SetupContainerRight spotify={spotify}/>\n            <Navigation socket={socket}/>\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Navigation.js",["153","154","155","156"],"import React, { useEffect } from 'react';\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport './Navigation.css';\nimport { NavigationButtonNext } from './NavigationButtonNext';\nimport { NavigationButtonBack } from './NavigationButtonBack';\nimport { Link } from 'react-router-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\n\nexport function Navigation({ socket }) {\n    \n    const [{ currentItem, selectedPlaylist, user, includedTracks }, dispatch] = useDataLayerValue();\n\n    function dispatchCurrentItem(item) {\n        dispatch({\n            type: \"SET_CURRENT_ITEM\",\n            currentItem: item\n        })\n    }\n\n    function nextItem() {\n        if(selectedPlaylist == null) {\n            return alert('Select a playlist');\n        }\n\n        if(selectedPlaylist.tracks.total < 45){\n            return alert(`The selected playlist needs to contain a minimum of 45 songs. Select a different playlist or add at least ${45 - selectedPlaylist.tracks.total} songs to your ${selectedPlaylist.name} playlist.`)\n        }\n\n        switch(currentItem) {\n            case \"select-playlist\":\n                return dispatchCurrentItem(\"card-preview\");\n            default: return;\n        }\n    }\n\n    useEffect(() => {\n\n    }, [currentItem])\n    \n    return (\n        <div className=\"navigation\">\n            {selectedPlaylist === null ? <AwesomeButton type=\"primary\" className=\"playlist-button\" disabled={true} onPress={nextItem} >Continue</AwesomeButton> : <Link to=\"/device\" className=\"playlist-button\"><AwesomeButton type=\"secondary\" className=\"playlist-button\" disabled={false} onPress={nextItem}>Continue</AwesomeButton></Link>}\n\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/SetupContainerRight.js",["157"],"import React, { useEffect, useState } from 'react';\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport { ShowPlaylistsRight } from './Containers/ShowPlaylistsRight/ShowPlaylistsRight';\nimport { CardSettingsRight } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardSettingsRight.js';\nimport { CardPreview } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardPreview.js'\nimport './SetupContainerRight.css';\n\nexport function SetupContainerRight({ spotify }) {\n    const [{ currentItem }] = useDataLayerValue();\n    const [rightContent,  setRightContent] = useState(null)\n\n    useEffect(() => {\n        function findCurrentItem() {\n            switch(currentItem) {\n                case \"select-playlist\":\n                    return setRightContent(<ShowPlaylistsRight />);\n                case \"card-settings\":\n                    return setRightContent(<CardSettingsRight />);\n                case \"card-preview\":\n                    return setRightContent(<CardPreview spotify={spotify} />);\n                default: return\n            }\n        } \n        \n        findCurrentItem()\n    }, [currentItem, spotify])\n\n    return (\n        <div className=\"setup-container-left\">\n            <ShowPlaylistsRight />\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/SetupContainerLeft.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/SelectPlaylistLeft.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardSettingsLeft.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShowPlaylistsRight/ShowPlaylistsRight.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShowPlaylistsRight/PlaylistRow.js",[],["158","159"],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardSettingsRight.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/NavigationButtonNext.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/NavigationButtonBack.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/ShufflePreview.js",["160"],"import React, { useState, useEffect } from 'react';\nimport { useDataLayerValue } from '../../../global-state/DataLayer';\nimport './ShufflePreview.css';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport function ShufflePreview() {\n    const [{ includedTracks }] = useDataLayerValue();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if(includedTracks !== null) {\n            setLoading(false)\n            console.log(loading);\n        }\n    }, [includedTracks])\n\n    return (\n        <div>\n            <h1>Card Preview</h1>\n            <br></br>\n            <p>What will a bingo card look like?</p>\n            <br></br>\n            <hr></hr>\n            <img src=\"https://www.iconhot.com/icon/png/default-icon/256/media-shuffle-inv.png\" alt=\"clock\" className=\"shuffle-image\" ></img>\n            {loading === true ? <div className=\"spinner\"><ClipLoader color={\"white\"} /></div> :\n            <div className=\"included-tracks\">\n                {includedTracks.map((track, index) => {\n                    return <p className=\"track\" index={index}><strong>{index+1}. {track.track.name}</strong> - {track.track.artists[0].name}</p>\n                })}\n            </div>\n            }\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Containers/CardPreview.js",["161"],"import React, { useEffect, useState } from 'react';\nimport { useDataLayerValue } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/global-state/DataLayer.js';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport './CardPreview.css';\n\nexport function CardPreview({ spotify }) {\n    const [{ selectedPlaylist, playlists, shuffledTracksAll, includeAmount }, dispatch] = useDataLayerValue();\n    const [loading, setLoading] = useState(false)\n\n    useEffect(()  => {\n        function shuffleArray(array) {\n            for (var i = array.length - 1; i > 0; i--) {\n                var j = Math.floor(Math.random() * (i + 1));\n                var temp = array[i];\n                array[i] = array[j];\n                array[j] = temp;\n            }\n        }\n\n        function findPlaylistId(playlist){\n            for(let i = 0; i < playlists?.items?.length; i++){\n                if(playlists?.items[i]?.name === playlist.name) {\n                    return playlists?.items[i]?.id\n                }\n            }\n        }\n\n        const getAllPlaylistTracks = async (playlistId) => {\n            if(typeof playlistId == \"undefined\"){\n                return \n            }\n\n            let allTracks = [];\n            let allTrackTitles = [];\n            let offset = 0;\n            \n            setLoading(true)\n            while(offset < 1000){\n                await spotify.getPlaylistTracks(playlistId, {\"offset\": offset}).then(response => {\n                    response.items.forEach(item => {\n                        if(item.track != null) {\n                            allTracks.push(item)\n                            allTrackTitles.push(item.track.name)\n                        }  \n                    })\n                })\n                offset += 100;\n            }\n\n            shuffleArray(allTracks);\n\n            dispatch({\n                type: \"SET_SHUFFLED_TRACKS_ALL\",\n                shuffledTracksAll: allTracks\n            })\n\n            dispatch({\n                type: \"SET_INCLUDED_TRACKS\",\n                includedTracks: allTracks.slice(0, includeAmount)\n            })\n\n            setLoading(false)\n        }\n\n        let playlistId = findPlaylistId(selectedPlaylist);\n\n        getAllPlaylistTracks(playlistId)\n\n    }, [selectedPlaylist])\n\n    return (\n        <div>\n            {loading ? <div className=\"spinner\"><ClipLoader color={\"white\"} /></div> : \n            <table>\n                <tbody>\n                    <tr>\n                        <td className=\"corner-lt\"><div className=\"content\">{shuffledTracksAll[0]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[1]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[2]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[3]?.track?.name}</div></td>\n                        <td className=\"corner-rt\"><div className=\"content\">{shuffledTracksAll[4]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td><div className=\"content\">{shuffledTracksAll[5]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[6]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[7]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[8]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[9]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td><div className=\"content\">{shuffledTracksAll[10]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[11]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[12]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[13]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[14]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td><div className=\"content\">{shuffledTracksAll[15]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[16]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[17]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[18]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[19]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td className=\"corner-lb\"><div className=\"content\">{shuffledTracksAll[20]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[21]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[22]?.track?.name}</div></td>\n                        <td><div className=\"content\">{shuffledTracksAll[23]?.track?.name}</div></td>\n                        <td className=\"corner-rb\"><div className=\"content\">{shuffledTracksAll[24]?.track?.name}</div></td>\n                    </tr>\n                </tbody>\n            </table>}\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Share/Share.js",["162","163","164"],"import React, { useEffect, useState } from 'react';\nimport { GeneratedCard } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Share/GeneratedCard.js';\nimport './Share.css'\nimport { useDataLayerValue } from '../../global-state/DataLayer';\n\nexport function Share() {\n    const [{ players, includedTracks }] = useDataLayerValue();\n    const res = [...Array(players)].map((_, i) => i + 1);\n\n    return (\n        <div className=\"cards\">\n            {res.map((player, id) => {\n                return (<div className=\"card-container\" key={id}>\n                    <GeneratedCard />\n                </div>)\n            })}\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/shared/Home.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/Share/GeneratedCard.js",["165","166","167"],"import React, { useState } from 'react';\nimport { useDataLayerValue } from '../../global-state/DataLayer';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport './GenerateCard.css';\n\nexport function GeneratedCard({ socket }) {\n    const [{ shuffledTracksAll, includedTracks }] = useDataLayerValue();\n    const [loading, setLoading] = useState(false);\n    const [shuffledTracks, setShuffledTracks] = useState(includedTracks);\n\n    function shuffleArr (array){\n        for (var i = array.length - 1; i > 0; i--) {\n            var rand = Math.floor(Math.random() * (i + 1));\n            [array[i], array[rand]] = [array[rand], array[i]]\n        }\n    }\n\n    function changeColor(e) {\n        if(e.target.style.backgroundColor === '') {\n            e.target.style.backgroundColor = 'white'\n        }\n\n        socket.emit('cell clicked', (e.target.innerText))\n\n        return e.target.style.backgroundColor === 'white' ? e.target.style.backgroundColor = '#A6FF96' : e.target.style.backgroundColor = 'white'\n    }\n\n    shuffleArr(shuffledTracks)\n\n    return (\n        <div>\n            <div>\n            {loading ? <div className=\"spinner\"><ClipLoader color={\"white\"} /></div> : \n            <table>\n                <thead>\n                    <tr><th colSpan=\"5\">longer Heading with a width of 100%</th></tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"corner-lt\" onClick={changeColor} style={{backgroundColor: \"white\"}}><div className=\"content\">{shuffledTracks[0]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[1]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[2]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[3]?.track?.name}</div></td>\n                        <td className=\"corner-rt\" onClick={changeColor}><div className=\"content\">{shuffledTracks[4]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[5]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[6]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[7]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[8]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[9]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[10]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[11]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[12]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[13]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[14]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[15]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[16]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[17]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[18]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[19]?.track?.name}</div></td>\n                    </tr>\n                    <tr>\n                        <td className=\"corner-lb\" onClick={changeColor}><div className=\"content\">{shuffledTracks[20]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[21]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[22]?.track?.name}</div></td>\n                        <td onClick={changeColor}><div className=\"content\">{shuffledTracks[23]?.track?.name}</div></td>\n                        <td className=\"corner-rb\" onClick={changeColor}><div className=\"content\">{shuffledTracks[24]?.track?.name}</div></td>\n                    </tr>\n                </tbody>\n            </table>}\n        </div>\n        </div>\n    )\n}","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Join.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/Lobby.js",["168"],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/login/WaitingRoom.js",["169"],"import React, { useState } from 'react';\nimport { useDataLayerValue } from '../global-state/DataLayer';\nimport './WaitingRoom.css';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport { WhatsappShareButton, WhatsappIcon } from 'react-share';\n\nfunction WaitingRoom({ room, currentPlayers, setInLobby, socket, isHost }) {\n    const [{ spotify }, dispatch] = useDataLayerValue();\n    const [autoPlay, setAutoPlay] = useState(true);\n    const shareURL = \"https://byngo.netlify.app/join\";\n    \n    function changeAutoPlay(e) {\n        let isChecked = e.target.checked;\n        setAutoPlay(isChecked);\n    }\n\n    function startGame() {\n        dispatch({\n            type: \"SET_AUTO_PLAY\",\n            autoPlay: autoPlay\n        });\n        socket.emit('start_game', room);\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"login-details\">\n                    <div className=\"room-code\">\n                        <h4>Room code</h4>\n                        <h1>{room}</h1>\n                    </div>\n                    <div className=\"login-url\">\n                        <p>Join at</p>\n                        <h2>https://byngo.netlify.app/join<WhatsappShareButton url={shareURL}><WhatsappIcon round className=\"whatsapp-icon\"></WhatsappIcon></WhatsappShareButton></h2>\n                        \n                    </div>    \n                </div>\n                \n                <hr></hr>\n                <div className=\"players-amount\">\n                    <h2>Players</h2>\n                    <h3>{currentPlayers.length}</h3>\n                </div>\n                <div className=\"active-players\">\n                <div className=\"players\">\n                                {currentPlayers.map((player, index) => {\n                                if(player.host){\n                                    return <div className=\"player-row\" key={index}><CakeIcon></CakeIcon><p><strong>{player.userName}</strong><i> created this game...</i></p></div>\n                                } else {\n                                    return <div className=\"player-row\" key={index}><PersonIcon></PersonIcon><p><strong>{player.userName}</strong> <i> joined the game...</i></p></div>\n                                }\n                            })}\n                            </div>\n                </div>\n                <hr></hr>\n                {isHost === true ? <div><input id=\"c1\" type=\"checkbox\" defaultChecked={true} onChange={changeAutoPlay}></input>\n    <label for=\"c1\" i> Auto-play</label><AwesomeButton type=\"secondary\" onPress={startGame} disabled={false} className=\"playlist-button\">Start Game</AwesomeButton></div> : <h4>Waiting for the host to start the game...</h4>}\n            </div>\n        </div>\n    )\n}\n\nexport default WaitingRoom\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/Play.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useEffect, useState } from 'react';\nimport './Play.css';\nimport PlaybackOptions from '../Play/PlaybackOptions/PlaybackOptions';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport PlayingTrack from './PlayingTrack';\nimport \"react-awesome-button/dist/styles.css\";\nimport BingoTypes from './BingoTypes';\nimport { Prompt } from 'react-router';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ReactTooltip from 'react-tooltip';\nimport Sidebar from \"react-sidebar\";\n\n\nfunction Play({ tracks, socket, currentPlayers, currentlyPlayingTrack, paused, setPaused, inLobby, isHost, room, roomInfo, userName }) {\n    const [openTrackModal, setOpenTrackModal] = useState(false);\n    const [openBingoModal, setOpenBingoModal] = useState(false);\n    const [openHorizontalWinnerModal, setOpenHorizontalWinnerModal] = useState(true)\n    const [openVerticalWinnerModal, setOpenVerticalWinnerModal] = useState(true)\n    const [openDiagonalWinnerModal, setOpenDiagonalWinnerModal] = useState(true)\n    const [openBlackoutWinnerModal, setOpenBlackoutWinnerModal] = useState(true)\n    const [openEndGameModal, setOpenEndGameModal] = useState(false);\n    const [currentTrack, setCurrentTrack] = useState(null);\n    const [playedTracks, setPlayedTracks] = useState([]);\n    const [bingo, setBingo] = useState(true);\n    const [horizontalTaken, setHorizontalTaken] = useState(false);\n    const [horizontalWinner, setHorizontalWinner] = useState(null);\n    const [verticalWinner, setVerticalWinner] = useState(null);\n    const [diagonalWinner, setDiagonalWinner] = useState(null);\n    const [blackoutWinner, setBlackoutWinner] = useState(null);\n    const [verticalTaken, setVerticalTaken] = useState(false);\n    const [diagonalTaken, setDiagonalTaken] = useState(false);\n    const [blackoutTaken, setBlackoutTaken] = useState(false);\n    const [horizontal, setHorizontal] = useState(false);\n    const [vertical, setVertical] = useState(false);\n    const [diagonal, setDiagonal] = useState(false);\n    const [blackout, setBlackout] = useState(false);\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    const onOpenTrackModal = () => setOpenTrackModal(true);\n    const onCloseTrackModal = () => setOpenTrackModal(false);\n    const onOpenBingoModal = () => setOpenBingoModal(true);\n    const onCloseBingoModal = () => setOpenBingoModal(false);\n    const onSetSidebarOpen = () => setSidebarOpen(true);\n    const onSetSidebarClose = () => setSidebarOpen(false);\n    const onCloseHorizontalWinnerModal = () => setOpenHorizontalWinnerModal(false);\n    const onCloseVerticalWinnerModal = () => setOpenVerticalWinnerModal(false)\n    const onCloseDiagonalWinnerModal = () => setOpenDiagonalWinnerModal(false)\n    const onCloseBlackoutWinnerModal = () => setOpenBlackoutWinnerModal(false)\n    const onOpenEndGameModal = () => setOpenEndGameModal(true)\n    const onCloseEndGameModal = () => setOpenEndGameModal(false)\n\n    function changeColor(e) {\n\n        let clickedTag = e.target.tagName;\n        let clicked = e.target\n\n        if(clickedTag === 'DIV') {\n            if(clicked.style.backgroundColor === '') {\n                clicked.style.backgroundColor = 'white'\n            }\n    \n            return clicked.style.backgroundColor === 'white' ? clicked.style.backgroundColor = '#A6FF96' : clicked.style.backgroundColor = 'white'\n        }\n\n        if(clickedTag === 'P' || clickedTag === 'STRONG'){\n            if(clicked.parentNode.style.backgroundColor === '') {\n                clicked.parentNode.style.backgroundColor = 'white'\n            }\n\n            return clicked.parentNode.style.backgroundColor === 'white' ? clicked.parentNode.style.backgroundColor = '#A6FF96' : clicked.parentNode.style.backgroundColor = 'white'\n        }\n    }\n\n    useEffect(() => {\n        setHorizontal(roomInfo.bingos.horizontal.taken);\n        setVertical(roomInfo.bingos.vertical.taken);\n        setDiagonal(roomInfo.bingos.diagonal.taken);\n        setBlackout(roomInfo.bingos.blackout.taken);\n\n        socket.on('playing_track', playingTrack => {\n            setCurrentTrack(playingTrack)\n            setPlayedTracks(playedTracks => [...playedTracks, playingTrack])\n        })\n\n        socket.on('horizontal_bingo', (userName) => {\n            setHorizontalWinner(userName)\n            setHorizontalTaken(true);\n            setTimeout(() => {setHorizontalTaken(false)}, 4000);\n            setHorizontal(true);\n        })\n\n        socket.on('vertical_bingo', (userName) => {\n            setVerticalWinner(userName)\n            setVerticalTaken(true);\n            console.log(verticalTaken);\n            setTimeout(() => {setVerticalTaken(false)}, 4000);\n            setVertical(true);\n        })\n\n        socket.on('diagonal_bingo', (userName) => {\n            setDiagonalWinner(userName)\n            setDiagonalTaken(true);\n            setTimeout(() => {setDiagonalTaken(false)}, 4000);\n            setDiagonal(true);\n        })\n\n        socket.on('blackout_bingo', (userName) => {\n            setBlackoutWinner(userName)\n            setBlackoutTaken(true);\n            setTimeout(() => {setBlackoutTaken(false)}, 4000);\n            setBlackout(true);\n        })\n\n        socket.on('bingos_update', roomInfo => {\n            setHorizontalTaken(roomInfo.bingos.horizontal.taken)\n            setVerticalTaken(roomInfo.bingos.vertical.taken)\n            setDiagonalTaken(roomInfo.bingos.diagonal.taken)\n            setBlackoutTaken(roomInfo.bingos.blackout.taken)\n            setHorizontal(roomInfo.bingos.horizontal.taken);\n            setVertical(roomInfo.bingos.vertical.taken);\n            setDiagonal(roomInfo.bingos.diagonal.taken);\n            setBlackout(roomInfo.bingos.blackout.taken);\n        })\n    }, [])\n    \n    return (\n        \n        <div>\n            <Sidebar\n            sidebar={(<div className=\"sidebar-content\"><h2 className=\"sidebar-title\">Players</h2><hr /><div className=\"players-sidebar-container\">{currentPlayers.map(player => {return <div className=\"player-sidebar\"><PersonIcon></PersonIcon><strong className=\"player-name-sidebar\">{player.userName}</strong></div>})}</div></div>)}\n            open={sidebarOpen}\n            onSetOpen={onSetSidebarClose}\n            pullRight={true}\n            styles={{ sidebar: { background: \"#182335\", color: \"white\", zIndex: \"3\" }, overlay: { zIndex: \"2\" } }}\n        >\n        \n            \n            {horizontalTaken ? <Modal open={openHorizontalWinnerModal} onClose={onCloseHorizontalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {horizontalWinner} had a horizontal bingo!🎉</p></Modal> : null}\n            {verticalTaken ? <Modal open={openVerticalWinnerModal} onClose={onCloseVerticalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {verticalWinner} had a vertical bingo! 🎉</p></Modal> : null}\n            {diagonalTaken ? <Modal open={openDiagonalWinnerModal} onClose={onCloseDiagonalWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {diagonalWinner} had a diagonal bingo! 🎉</p></Modal> : null}\n            {blackoutTaken ? <Modal open={openBlackoutWinnerModal} onClose={onCloseBlackoutWinnerModal} showCloseIcon={false} center classNames={{modal: 'customModal'}}><p>🎉 {blackoutWinner} had a blackout bingo! 🎉</p></Modal> : null}\n\n            {currentTrack !== null ? <Modal open={openTrackModal} showCloseIcon={true} onClose={onCloseTrackModal} center classNames={{modal: 'customModal'}}><PlayingTrack currentTrack={currentTrack} /></Modal> : <Modal open={openTrackModal} showCloseIcon={false} onClose={onCloseTrackModal} center classNames={{modal: 'customModal'}}><p>No track playing</p></Modal>}\n\n            <div className=\"bingo-container\"> \n                <table className=\"table\">\n                \n                    <thead>\n                        <tr><th colSpan=\"5\"><div className=\"head-container\"><ReactTooltip /><span className=\"room-code-head\" data-tip=\"Room code\">{room}</span><p>BYNGO</p><div className=\"active-players-head\" onClick={onSetSidebarOpen} ><PersonIcon></PersonIcon><p>{currentPlayers.length}</p></div></div></th></tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className=\"corner-lt\" onClick={changeColor} style={{backgroundColor: \"white\"}}><div className=\"content\" ><p>{tracks[0]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[0]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[1]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[1]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[2]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[2]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[3]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[3]?.track?.artists[0]?.name}</strong></div></td>\n                            <td className=\"corner-rt\" onClick={changeColor}><div className=\"content\"><p>{tracks[4]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[4]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[5]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[5]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[6]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[6]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[7]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[7]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[8]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[8]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[9]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[9]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[10]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[10]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[11]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[11]?.track?.artists[0]?.name}</strong></div></td>\n                            <td><div className=\"content free-space\"><h3>FREE SPACE</h3></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[12]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[12]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[13]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[13]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[14]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[14]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[15]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[15]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[16]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[16]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[17]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[17]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[18]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[18]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                        <tr>\n                            <td className=\"corner-lb\" onClick={changeColor}><div className=\"content\"><p>{tracks[19]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[19]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[20]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[20]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[21]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[21]?.track?.artists[0]?.name}</strong></div></td>\n                            <td onClick={changeColor}><div className=\"content\"><p>{tracks[22]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[22]?.track?.artists[0]?.name}</strong></div></td>\n                            <td className=\"corner-rb\" onClick={changeColor}><div className=\"content\"><p>{tracks[23]?.track?.name.split(/\\ -.*|\\([^)]*\\)/gm)[0]}</p><strong>{tracks[23]?.track?.artists[0]?.name}</strong></div></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div className=\"action-buttons\">\n                    <AwesomeButton type=\"secondary\" onPress={onOpenTrackModal} className=\"device-button track-button\" >SONG</AwesomeButton>\n\n                    {!bingo ? <AwesomeButton type=\"secondary\" onPress={onOpenTrackModal} className=\"device-button bingo-button\" disabled={true}>CALL BINGO</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={onOpenBingoModal} className=\"device-button bingo-button\">BINGO</AwesomeButton>} \n\n                    {isHost === true && <AwesomeButton type=\"primary\" onPress={onOpenEndGameModal} className=\"device-button end-button\">END GAME</AwesomeButton>}\n\n                    <Modal open={openEndGameModal} showCloseIcon={false} onClose={onCloseEndGameModal} center classNames={{modal: 'customModal'}}><h3>Are you sure?</h3></Modal>\n                \n                    <Modal open={openBingoModal} showCloseIcon={true} onClose={onCloseBingoModal} center classNames={{modal: 'customModal bingoModal'}}><BingoTypes playedTracks={playedTracks} tracks={tracks} socket={socket} horizontal={horizontal} vertical={vertical} diagonal={diagonal} blackout={blackout} room={room} userName={userName} horizontalWinner={horizontalWinner} verticalWinner={verticalWinner} diagonalWinner={diagonalWinner} blackoutWinner={blackoutWinner}/></Modal>\n                </div>\n            </div>\n        {<h1>{currentlyPlayingTrack}</h1>}\n\n        {isHost === true ? <div><PlaybackOptions tracks={tracks} socket={socket} currentPlayers={currentPlayers} paused={paused} setPaused={setPaused} inLobby={inLobby} room={room} /></div>: null}\n        </Sidebar>\n        </div>\n        \n    )\n}\n\nexport default Play\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/PlaybackOptions/PlaybackOptions.js",["197","198","199","200","201","202"],"import React, { useEffect, useState, useRef } from 'react';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport './PlaybackOptions.css';\nimport { useDataLayerValue } from '../../../global-state/DataLayer';\n\nfunction PlaybackOptions({ tracks, socket, currentPlayers, paused, setPaused, inLobby, room }) {\n    const [{ spotify, selectedDevice, autoPlay }] = useDataLayerValue();\n    const [order, setOrder] = useState([]);\n    const [current, setCurrent] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n\n    let currentSecRef = useRef(80);\n    let isPausedRef = useRef(true);\n    let intervalRef = useRef();\n    let orderRef = useRef();\n    let currentSongRef = useRef(0);\n\n    let minutes = Math.floor(currentSecRef.current / 60);\n    let remainingSeconds = currentSecRef.current - minutes * 60;\n  \n    const decreaseSec = () => setSeconds((prev) => prev - 1);\n    \n    useEffect(() => {\n        let copy = JSON.parse(JSON.stringify(tracks))\n        shuffleArr(copy);\n        orderRef.current = copy\n\n        \n\n        if(autoPlay) {\n            intervalRef.current = setInterval(decreaseSec, 1000);\n\n            playSong();\n\n            setInterval(function() {\n                if(currentSecRef.current <= 0) {\n                    nextSong();\n                    currentSecRef.current = 80;\n                }\n                if(!isPausedRef.current) {\n                    currentSecRef.current -= 1;\n                }\n            }, 1000)\n        }\n    }, [])\n\n    function shuffleArr (array){\n        for (var i = array.length - 1; i > 0; i--) {\n            var rand = Math.floor(Math.random() * (i + 1));\n            [array[i], array[rand]] = [array[rand], array[i]]\n        }\n    }\n\n    function playSong() {\n        if(currentSongRef.current === 0) {\n            setSeconds(0);\n            spotify.play({\"uris\": [orderRef.current[currentSongRef.current].track.uri], device_id: selectedDevice.id});\n        } else {\n            spotify.play({device_id: selectedDevice.id});\n        }\n        isPausedRef.current = false;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));  \n    }\n\n    function pauseSong() {\n        spotify.pause();\n        isPausedRef.current = true\n        setPaused(true)\n        socket.emit('playing_track', ({room: room}))\n    }\n\n    function nextSong() {  \n        spotify.play({\"uris\": [orderRef.current[currentSongRef.current+1]?.track?.uri]});  \n        currentSongRef.current += 1;\n        isPausedRef.current = false;\n        currentSecRef.current = 80;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));\n        setSeconds(0); \n    }\n\n    function previousSong() {\n        spotify.play({\"uris\": [orderRef.current[currentSongRef.current-1].track.uri]});\n        currentSongRef.current -= 1;\n        isPausedRef.current = false;\n        currentSecRef.current = 80;\n        setPaused(false)\n        socket.emit('playing_track', ({room: room, current: orderRef.current[currentSongRef.current]}));\n        setSeconds(0); \n    }   \n \n    return (\n        <div className=\"playback-options\">\n            \n            {currentSongRef.current !== 0 ? <SkipPreviousIcon fontSize=\"large\" className=\"option\" onClick={previousSong}/> : <SkipPreviousIcon fontSize=\"large\" className=\"option first\" />}\n            {!paused ? <PauseCircleOutlineIcon fontSize=\"large\" className=\"option\" onClick={pauseSong}/> : <PlayCircleOutlineIcon fontSize=\"large\" className=\"option\" onClick={playSong}/>}\n            {currentSongRef.current !== tracks.length-1 ?<SkipNextIcon fontSize=\"large\" className=\"option\" onClick={nextSong}/> : <SkipNextIcon fontSize=\"large\" className=\"option first\" />}\n            {autoPlay && <div className=\"counter\">0{minutes}:{remainingSeconds < 10 && <div>0</div>}{remainingSeconds}</div>}\n        </div>\n    )\n}\n\nexport default PlaybackOptions\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Device.js",["203","204","205"],"import React, { useState, useEffect } from 'react';\nimport './Device.css';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { useDataLayerValue } from '../global-state/DataLayer';\nimport { Navigation } from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/private/LightBox/Navigation.js';\nimport { Link } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nfunction Device({ socket }) {\n    const [{ playlists, spotify, includeAmount, selectedPlaylist, includedTracks, user, devices, selectedDevice }, dispatch] = useDataLayerValue()\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false)\n\n    const onOpenModal = () => setOpen(true);\n    const onCloseModal = () => setOpen(false);\n\n    function setSelectedDevice(e) {\n        let name = e.target.textContent;\n        for(let i = 0; i < devices.devices.length; i++) {\n            if(name === devices.devices[i].name) {\n                dispatch({\n                    type: \"SELECTED_DEVICE\",\n                    selectedDevice: devices.devices[i]\n                })\n                spotify.transferMyPlayback([devices.devices[i].id])\n                onCloseModal();\n                return\n            }\n        }\n    }\n\n    async function getDevices() {\n        setLoading(true)\n        await spotify.getMyDevices().then(response => {\n            dispatch({\n                type: \"SET_DEVICES\",\n                devices: response\n            })\n        })\n        setLoading(false)\n    }\n\n    useEffect(()  => {\n        function shuffleArray(array) {\n            for (var i = array.length - 1; i > 0; i--) {\n                var j = Math.floor(Math.random() * (i + 1));\n                var temp = array[i];\n                array[i] = array[j];\n                array[j] = temp;\n            }\n        }\n\n        function findPlaylistId(playlist){\n            for(let i = 0; i < playlists?.items?.length; i++){\n                if(playlists?.items[i]?.name === playlist.name) {\n                    return playlists?.items[i]?.id\n                }\n            }\n        }\n\n        const getAllPlaylistTracks = async (playlistId) => {\n            if(typeof playlistId == \"undefined\"){\n                return \n            }\n\n            let allTracks = [];\n            let allTrackTitles = [];\n            let offset = 0;\n            \n            setLoading(true)\n            while(offset < 1000){\n                await spotify.getPlaylistTracks(playlistId, {\"offset\": offset}).then(response => {\n                    response.items.forEach(item => {\n                        if(item.track != null) {\n                            allTracks.push(item)\n                            allTrackTitles.push(item.track.name)\n                        }  \n                    })\n                })\n                offset += 100;\n            }\n\n            shuffleArray(allTracks);\n\n            let activeDevices; \n\n            await spotify.getMyDevices().then(response => {\n                activeDevices = response;\n            })\n\n            dispatch({\n                type: \"SET_SHUFFLED_TRACKS_ALL\",\n                shuffledTracksAll: allTracks\n            })\n\n            dispatch({\n                type: \"SET_INCLUDED_TRACKS\",\n                includedTracks: allTracks.slice(0, includeAmount)\n            })\n\n            dispatch({\n                type: \"SET_DEVICES\",\n                devices: activeDevices\n            })\n\n            setLoading(false)\n        }\n\n        let playlistId = findPlaylistId(selectedPlaylist);\n\n        getAllPlaylistTracks(playlistId)\n\n    }, [selectedPlaylist])\n\n    function createRoom() {\n        const userRoom = socket.id.substring(0, 4).toUpperCase();\n        const userName = user.id;\n        socket.emit('create_room', ({ userName, userRoom, includedTracks }))\n    }\n\n    return (\n        <div className=\"wrapper\">\n        <div className=\"navigation\">\n            {loading ? <div className=\"spinner\"><ClipLoader color=\"white\" /></div> : <div className=\"device\">\n                <h2>Which device do you want to use?</h2>\n                <p><i>Make sure your device is awake and Spotify is open.</i></p>\n                <br></br>\n                <AwesomeButton type=\"primary\" onPress={onOpenModal} className=\"device-button\" >Choose a device</AwesomeButton>\n                {selectedDevice !== null && <div className=\"device-option no-hover\"><h3>{selectedDevice.name}</h3><p>{selectedDevice.type}</p></div>}\n                <Modal open={open} onClose={onCloseModal} center classNames={{modal: 'customModal'}}>\n                    {devices.length === 0 && <h2>No devices found. Make sure your device is active and has Spotify opened. </h2>}\n                    {devices.length !== 0 && devices.devices.map((device, index) => {\n                        return <div onClick={setSelectedDevice} className=\"device-option\" key={index}><h3>{device.name}</h3><p>{device.type}</p></div>\n                    })}\n                    <hr></hr>\n                    <p>Can't find your device? Reopen Spotify on your device and click on the button below.</p>\n                    <div className=\"refresh\">\n                    <AwesomeButton type=\"primary\" onPress={getDevices} className=\"device-button\" >Refresh</AwesomeButton>\n                    </div>\n                </Modal>\n                \n            </div> } \n        </div>\n        <div className=\"button-next\">\n            {!loading && selectedDevice === null && <AwesomeButton type=\"secondary\" onPress={onOpenModal} disabled={true} className=\"playlist-button\">Invite players</AwesomeButton>}\n            {!loading && selectedDevice !== null && <Link to=\"/play\" socket={socket} onClick={createRoom}><AwesomeButton type=\"secondary\" disabled={false} className=\"playlist-button\">Invite players</AwesomeButton></Link>}      \n        </div>\n        </div>\n    )\n}\n\nexport default Device\n","/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/PlayingTrack.js",[],"/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/Components/Play/BingoTypes.js",["206"],"import React, { useState, useEffect } from 'react';\nimport './BingoTypes.css';\nimport horizontalImg from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/content/horizontal.png';\nimport verticalImg from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/content/vertical.png';\nimport diagonalImg from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/content/diagonal.png';\nimport blackoutImg from '/Users/ChaimTerWee/Documents/projects/spotify-bingo/spotify-bingo-v2/src/content/blackout.png';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport Confetti from 'react-confetti'\n\nfunction BingoTypes({ playedTracks, tracks, socket, horizontal, vertical, diagonal, blackout, room, userName, diagonalWinner, horizontalWinner, verticalWinner, blackoutWinner }) {\n\n    const [confetti, setConfetti] = useState(false);\n\n    function songWasPlayed(song){\n        for(let i = 0; i < playedTracks?.length; i++) {\n            if(song?.track?.name === playedTracks[i]?.track?.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function horizontalBingo() {\n        let firstCell = 0;\n        while(firstCell <= 20) {\n            console.log(firstCell);\n            let secondCell = firstCell + 1;\n            let thirdCell = firstCell + 2;\n            let fourthCell = firstCell + 3;\n            let fifthCell = firstCell + 4;\n\n            if(firstCell === 10) {\n                thirdCell += 1;\n                fourthCell += 1;\n            }\n            \n            if(firstCell === 10) {\n                if(songWasPlayed(tracks[firstCell])) {\n                    if(songWasPlayed(tracks[secondCell])){\n                        if(songWasPlayed(tracks[thirdCell])) {\n                            if(songWasPlayed(tracks[fourthCell])) {\n                                setConfetti(true)\n                                setTimeout(function() {setConfetti(false)}, 4500);\n                                return socket.emit('horizontal_bingo', ({ room, userName }));\n                            }\n                        }\n                    }\n                }\n                firstCell += 4; \n            } else {\n                if(songWasPlayed(tracks[firstCell])) {\n                    if(songWasPlayed(tracks[secondCell])){\n                        if(songWasPlayed(tracks[thirdCell])) {\n                            if(songWasPlayed(tracks[fourthCell])) {\n                                if(songWasPlayed(tracks[fifthCell])) {\n                                    setConfetti(true)\n                                    setTimeout(function() {setConfetti(false)}, 4500);\n                                    return socket.emit('horizontal_bingo', ({ room, userName }));\n                                }\n                            }\n                        }\n                    }\n                }\n                firstCell += 5;\n            } \n        }\n        return alert(`You don't have a horizontal bingo yet...Keep playing!`)\n    }\n\n    function verticalBingo() {\n        let firstCell = 0;\n        while(firstCell <= 4) {\n            console.log(firstCell);\n            let secondCell = firstCell + 5;\n            let thirdCell = firstCell + 10;\n            let fourthCell = firstCell + 14;\n            let fifthCell = firstCell + 19;\n\n            if(firstCell === 2) {\n                thirdCell += 4;\n                fourthCell += 4;\n            }\n            \n            if(firstCell === 10) {\n                if(songWasPlayed(tracks[firstCell])) {\n                    if(songWasPlayed(tracks[secondCell])){\n                        if(songWasPlayed(tracks[thirdCell])) {\n                            if(songWasPlayed(tracks[fourthCell])) {\n                                setConfetti(true)\n                                setTimeout(function() {setConfetti(false)}, 4500);\n                                return socket.emit('vertical_bingo', ({ room, userName }));\n                            }\n                        }\n                    }\n                }\n                firstCell += 1; \n            } else {\n                if(songWasPlayed(tracks[firstCell])) {\n                    if(songWasPlayed(tracks[secondCell])){\n                        if(songWasPlayed(tracks[thirdCell])) {\n                            if(songWasPlayed(tracks[fourthCell])) {\n                                if(songWasPlayed(tracks[fifthCell])) {\n                                    setConfetti(true)\n                                    setTimeout(function() {setConfetti(false)}, 4500);\n                                    return socket.emit('vertical_bingo', ({ room, userName }));\n                                }\n                            }\n                        }\n                    }\n                }\n                firstCell += 1;\n            } \n        }\n        return alert(`You don't have a vertical bingo yet...Keep playing!`)\n    }\n\n    function diagonalBingo() {\n        let firstCell = 19;\n        let secondCell = 15;\n        let thirdCell = 8;\n        let fourthCell = 4\n\n        if(songWasPlayed(tracks[firstCell])) {\n            if(songWasPlayed(tracks[secondCell])){\n                if(songWasPlayed(tracks[thirdCell])) {\n                    if(songWasPlayed(tracks[fourthCell])) {\n                        setConfetti(true)\n                        setTimeout(function() {setConfetti(false)}, 4500);\n                        return socket.emit('diagonal_bingo', ({ room, userName }));\n                    }\n                }\n            }\n        } else {\n            firstCell = 0;\n            secondCell = 6;\n            thirdCell = 17;\n            fourthCell = 23\n            if(songWasPlayed(tracks[firstCell])) {\n                if(songWasPlayed(tracks[secondCell])){\n                    if(songWasPlayed(tracks[thirdCell])) {\n                        if(songWasPlayed(tracks[fourthCell])) {\n                            setConfetti(true)\n                            setTimeout(function() {setConfetti(false)}, 4500);\n                            return socket.emit('diagonal_bingo', ({ room, userName }));\n                        }\n                    }\n                }\n            }    \n        }\n\n        return alert(`You don't have a diagonal bingo yet...Keep playing!`)\n    }\n\n    function blackoutBingo() {\n        let totalCorrect = 0;\n        for(let i = 0; i <= 23; i++) {\n            let bingoCellToCheck = tracks[i]\n            for(let j = 0; j < playedTracks?.length; j++) {\n                if(playedTracks[j]?.track?.name === bingoCellToCheck?.track?.name) {\n                    console.log(playedTracks[j]?.track?.name, bingoCellToCheck?.track?.name);\n                    totalCorrect++;\n                }\n            }\n        }\n        if(totalCorrect >= 24) {\n            setConfetti(true)\n            setTimeout(function() {setConfetti(false)}, 10000);\n            return socket.emit('blackout_bingo', ({ room, userName }));\n        } else {\n            return alert(`You don't have a blackout bingo yet...Keep playing!`)\n        }\n    }\n\n\n    return (\n        <div className=\"types-container\">\n\n            {confetti ? <Confetti /> : null}\n\n            <div className=\"bingo\">\n                <strong>Horizontal Bingo</strong>\n                <img src={horizontalImg} alt=\"horizontal\" className=\"bingo-image\" onClick={horizontalBingo}></img>\n                {!horizontal ? <AwesomeButton type=\"secondary\" onPress={horizontalBingo} className=\"device-button\" >Call horizontal bingo</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={horizontalBingo} className=\"device-button\" disabled={true}>Called by {horizontalWinner}!</AwesomeButton>}\n            </div>\n\n            <div className=\"bingo\">\n                <strong>Vertical Bingo</strong>\n                <img src={verticalImg} alt=\"vertical\" className=\"bingo-image\"></img>\n                {!vertical ? <AwesomeButton type=\"secondary\" onPress={verticalBingo} className=\"device-button\" >Call vertical bingo</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={horizontalBingo} className=\"device-button\" disabled={true}>Called by {verticalWinner}!</AwesomeButton>}\n            </div>\n            <div className=\"bingo\">\n                <strong>Diagonal Bingo</strong>\n                <img src={diagonalImg} alt=\"diagonal\" className=\"bingo-image\"></img>\n                {!diagonal ? <AwesomeButton type=\"secondary\" onPress={diagonalBingo} className=\"device-button\" >Call diagonal bingo</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={horizontalBingo} className=\"device-button\" disabled={true}>Called by {diagonalWinner}!</AwesomeButton>}\n            </div>\n            <div className=\"bingo\">\n                <strong>Blackout Bingo</strong>\n                <img src={blackoutImg} alt=\"blackout\" className=\"bingo-image\"></img>\n                {!blackout ? <AwesomeButton type=\"secondary\" onPress={blackoutBingo} className=\"device-button\" >Call blackout bingo</AwesomeButton> : <AwesomeButton type=\"secondary\" onPress={horizontalBingo} className=\"device-button\" disabled={true}>Called by {blackoutWinner}!</AwesomeButton>}\n            </div>\n        </div>\n    )\n}\n\nexport default BingoTypes\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"215","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":28},{"ruleId":"211","severity":1,"message":"216","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":30},{"ruleId":"211","severity":1,"message":"217","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":30},{"ruleId":"211","severity":1,"message":"218","line":12,"column":45,"nodeType":"213","messageId":"214","endLine":12,"endColumn":49},{"ruleId":"211","severity":1,"message":"219","line":12,"column":51,"nodeType":"213","messageId":"214","endLine":12,"endColumn":65},{"ruleId":"211","severity":1,"message":"220","line":10,"column":12,"nodeType":"213","messageId":"214","endLine":10,"endColumn":24},{"ruleId":"207","replacedBy":"221"},{"ruleId":"209","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":15,"column":8,"nodeType":"225","endLine":15,"endColumn":24,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":69,"column":8,"nodeType":"225","endLine":69,"endColumn":26,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"229","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"230","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"219","line":7,"column":23,"nodeType":"213","messageId":"214","endLine":7,"endColumn":37},{"ruleId":"211","severity":1,"message":"231","line":7,"column":14,"nodeType":"213","messageId":"214","endLine":7,"endColumn":31},{"ruleId":"211","severity":1,"message":"232","line":8,"column":21,"nodeType":"213","messageId":"214","endLine":8,"endColumn":31},{"ruleId":"211","severity":1,"message":"233","line":9,"column":28,"nodeType":"213","messageId":"214","endLine":9,"endColumn":45},{"ruleId":"223","severity":1,"message":"234","line":104,"column":8,"nodeType":"225","endLine":104,"endColumn":17,"suggestions":"235"},{"ruleId":"211","severity":1,"message":"236","line":11,"column":14,"nodeType":"213","messageId":"214","endLine":11,"endColumn":21},{"ruleId":"211","severity":1,"message":"237","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":16},{"ruleId":"211","severity":1,"message":"238","line":26,"column":19,"nodeType":"213","messageId":"214","endLine":26,"endColumn":27},{"ruleId":"223","severity":1,"message":"239","line":126,"column":8,"nodeType":"225","endLine":126,"endColumn":10,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":155,"column":172,"nodeType":"243","messageId":"244","endLine":155,"endColumn":173,"suggestions":"245"},{"ruleId":"241","severity":1,"message":"242","line":156,"column":114,"nodeType":"243","messageId":"244","endLine":156,"endColumn":115,"suggestions":"246"},{"ruleId":"241","severity":1,"message":"242","line":157,"column":114,"nodeType":"243","messageId":"244","endLine":157,"endColumn":115,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"242","line":158,"column":114,"nodeType":"243","messageId":"244","endLine":158,"endColumn":115,"suggestions":"248"},{"ruleId":"241","severity":1,"message":"242","line":159,"column":136,"nodeType":"243","messageId":"244","endLine":159,"endColumn":137,"suggestions":"249"},{"ruleId":"241","severity":1,"message":"242","line":162,"column":114,"nodeType":"243","messageId":"244","endLine":162,"endColumn":115,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"242","line":163,"column":114,"nodeType":"243","messageId":"244","endLine":163,"endColumn":115,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"242","line":164,"column":114,"nodeType":"243","messageId":"244","endLine":164,"endColumn":115,"suggestions":"252"},{"ruleId":"241","severity":1,"message":"242","line":165,"column":114,"nodeType":"243","messageId":"244","endLine":165,"endColumn":115,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"242","line":166,"column":114,"nodeType":"243","messageId":"244","endLine":166,"endColumn":115,"suggestions":"254"},{"ruleId":"241","severity":1,"message":"242","line":169,"column":115,"nodeType":"243","messageId":"244","endLine":169,"endColumn":116,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"242","line":170,"column":115,"nodeType":"243","messageId":"244","endLine":170,"endColumn":116,"suggestions":"256"},{"ruleId":"241","severity":1,"message":"242","line":172,"column":115,"nodeType":"243","messageId":"244","endLine":172,"endColumn":116,"suggestions":"257"},{"ruleId":"241","severity":1,"message":"242","line":173,"column":115,"nodeType":"243","messageId":"244","endLine":173,"endColumn":116,"suggestions":"258"},{"ruleId":"241","severity":1,"message":"242","line":176,"column":115,"nodeType":"243","messageId":"244","endLine":176,"endColumn":116,"suggestions":"259"},{"ruleId":"241","severity":1,"message":"242","line":177,"column":115,"nodeType":"243","messageId":"244","endLine":177,"endColumn":116,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"242","line":178,"column":115,"nodeType":"243","messageId":"244","endLine":178,"endColumn":116,"suggestions":"261"},{"ruleId":"241","severity":1,"message":"242","line":179,"column":115,"nodeType":"243","messageId":"244","endLine":179,"endColumn":116,"suggestions":"262"},{"ruleId":"241","severity":1,"message":"242","line":180,"column":115,"nodeType":"243","messageId":"244","endLine":180,"endColumn":116,"suggestions":"263"},{"ruleId":"241","severity":1,"message":"242","line":183,"column":137,"nodeType":"243","messageId":"244","endLine":183,"endColumn":138,"suggestions":"264"},{"ruleId":"241","severity":1,"message":"242","line":184,"column":115,"nodeType":"243","messageId":"244","endLine":184,"endColumn":116,"suggestions":"265"},{"ruleId":"241","severity":1,"message":"242","line":185,"column":115,"nodeType":"243","messageId":"244","endLine":185,"endColumn":116,"suggestions":"266"},{"ruleId":"241","severity":1,"message":"242","line":186,"column":115,"nodeType":"243","messageId":"244","endLine":186,"endColumn":116,"suggestions":"267"},{"ruleId":"241","severity":1,"message":"242","line":187,"column":137,"nodeType":"243","messageId":"244","endLine":187,"endColumn":138,"suggestions":"268"},{"ruleId":"211","severity":1,"message":"269","line":11,"column":12,"nodeType":"213","messageId":"214","endLine":11,"endColumn":17},{"ruleId":"211","severity":1,"message":"270","line":11,"column":19,"nodeType":"213","messageId":"214","endLine":11,"endColumn":27},{"ruleId":"211","severity":1,"message":"271","line":12,"column":12,"nodeType":"213","messageId":"214","endLine":12,"endColumn":19},{"ruleId":"211","severity":1,"message":"272","line":12,"column":21,"nodeType":"213","messageId":"214","endLine":12,"endColumn":31},{"ruleId":"211","severity":1,"message":"273","line":13,"column":12,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"223","severity":1,"message":"274","line":48,"column":8,"nodeType":"225","endLine":48,"endColumn":10,"suggestions":"275"},{"ruleId":"211","severity":1,"message":"276","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":20},{"ruleId":"211","severity":1,"message":"277","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"223","severity":1,"message":"227","line":117,"column":8,"nodeType":"225","endLine":117,"endColumn":26,"suggestions":"278"},{"ruleId":"211","severity":1,"message":"229","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'SetupContainerLeft' is defined but never used.","'NavigationButtonNext' is defined but never used.","'NavigationButtonBack' is defined but never used.","'user' is assigned a value but never used.","'includedTracks' is assigned a value but never used.","'rightContent' is assigned a value but never used.",["279"],["280"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["281"],"React Hook useEffect has missing dependencies: 'dispatch', 'includeAmount', 'playlists?.items', and 'spotify'. Either include them or remove the dependency array.",["282"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'shuffledTracksAll' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setShuffledTracks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleVisibilityChange' and 'socket'. Either include them or remove the dependency array.",["283"],"'spotify' is assigned a value but never used.","'Prompt' is defined but never used.","'setBingo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomInfo.bingos.blackout.taken', 'roomInfo.bingos.diagonal.taken', 'roomInfo.bingos.horizontal.taken', 'roomInfo.bingos.vertical.taken', 'socket', and 'verticalTaken'. Either include them or remove the dependency array. If 'setHorizontal' needs the current value of 'roomInfo.bingos.horizontal.taken', you can also switch to useReducer instead of useState and read 'roomInfo.bingos.horizontal.taken' in the reducer.",["284"],"no-useless-escape","Unnecessary escape character: \\ .","Literal","unnecessaryEscape",["285","286"],["287","288"],["289","290"],["291","292"],["293","294"],["295","296"],["297","298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],["309","310"],["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],"'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'current' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'seconds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'autoPlay', 'nextSong', 'playSong', and 'tracks'. Either include them or remove the dependency array.",["333"],"'Navigation' is defined but never used.","'ComputerIcon' is defined but never used.",["334"],"no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"messageId":"343","fix":"344","desc":"345"},{"messageId":"346","fix":"347","desc":"348"},{"messageId":"343","fix":"349","desc":"345"},{"messageId":"346","fix":"350","desc":"348"},{"messageId":"343","fix":"351","desc":"345"},{"messageId":"346","fix":"352","desc":"348"},{"messageId":"343","fix":"353","desc":"345"},{"messageId":"346","fix":"354","desc":"348"},{"messageId":"343","fix":"355","desc":"345"},{"messageId":"346","fix":"356","desc":"348"},{"messageId":"343","fix":"357","desc":"345"},{"messageId":"346","fix":"358","desc":"348"},{"messageId":"343","fix":"359","desc":"345"},{"messageId":"346","fix":"360","desc":"348"},{"messageId":"343","fix":"361","desc":"345"},{"messageId":"346","fix":"362","desc":"348"},{"messageId":"343","fix":"363","desc":"345"},{"messageId":"346","fix":"364","desc":"348"},{"messageId":"343","fix":"365","desc":"345"},{"messageId":"346","fix":"366","desc":"348"},{"messageId":"343","fix":"367","desc":"345"},{"messageId":"346","fix":"368","desc":"348"},{"messageId":"343","fix":"369","desc":"345"},{"messageId":"346","fix":"370","desc":"348"},{"messageId":"343","fix":"371","desc":"345"},{"messageId":"346","fix":"372","desc":"348"},{"messageId":"343","fix":"373","desc":"345"},{"messageId":"346","fix":"374","desc":"348"},{"messageId":"343","fix":"375","desc":"345"},{"messageId":"346","fix":"376","desc":"348"},{"messageId":"343","fix":"377","desc":"345"},{"messageId":"346","fix":"378","desc":"348"},{"messageId":"343","fix":"379","desc":"345"},{"messageId":"346","fix":"380","desc":"348"},{"messageId":"343","fix":"381","desc":"345"},{"messageId":"346","fix":"382","desc":"348"},{"messageId":"343","fix":"383","desc":"345"},{"messageId":"346","fix":"384","desc":"348"},{"messageId":"343","fix":"385","desc":"345"},{"messageId":"346","fix":"386","desc":"348"},{"messageId":"343","fix":"387","desc":"345"},{"messageId":"346","fix":"388","desc":"348"},{"messageId":"343","fix":"389","desc":"345"},{"messageId":"346","fix":"390","desc":"348"},{"messageId":"343","fix":"391","desc":"345"},{"messageId":"346","fix":"392","desc":"348"},{"messageId":"343","fix":"393","desc":"345"},{"messageId":"346","fix":"394","desc":"348"},{"desc":"395","fix":"396"},{"desc":"337","fix":"397"},"Update the dependencies array to be: [includedTracks, loading]",{"range":"398","text":"399"},"Update the dependencies array to be: [dispatch, includeAmount, playlists?.items, selectedPlaylist, spotify]",{"range":"400","text":"401"},"Update the dependencies array to be: [handleVisibilityChange, inLobby, socket]",{"range":"402","text":"403"},"Update the dependencies array to be: [roomInfo.bingos.blackout.taken, roomInfo.bingos.diagonal.taken, roomInfo.bingos.horizontal.taken, roomInfo.bingos.vertical.taken, socket, verticalTaken]",{"range":"404","text":"405"},"removeEscape",{"range":"406","text":"407"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"408","text":"409"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"410","text":"407"},{"range":"411","text":"409"},{"range":"412","text":"407"},{"range":"413","text":"409"},{"range":"414","text":"407"},{"range":"415","text":"409"},{"range":"416","text":"407"},{"range":"417","text":"409"},{"range":"418","text":"407"},{"range":"419","text":"409"},{"range":"420","text":"407"},{"range":"421","text":"409"},{"range":"422","text":"407"},{"range":"423","text":"409"},{"range":"424","text":"407"},{"range":"425","text":"409"},{"range":"426","text":"407"},{"range":"427","text":"409"},{"range":"428","text":"407"},{"range":"429","text":"409"},{"range":"430","text":"407"},{"range":"431","text":"409"},{"range":"432","text":"407"},{"range":"433","text":"409"},{"range":"434","text":"407"},{"range":"435","text":"409"},{"range":"436","text":"407"},{"range":"437","text":"409"},{"range":"438","text":"407"},{"range":"439","text":"409"},{"range":"440","text":"407"},{"range":"441","text":"409"},{"range":"442","text":"407"},{"range":"443","text":"409"},{"range":"444","text":"407"},{"range":"445","text":"409"},{"range":"446","text":"407"},{"range":"447","text":"409"},{"range":"448","text":"407"},{"range":"449","text":"409"},{"range":"450","text":"407"},{"range":"451","text":"409"},{"range":"452","text":"407"},{"range":"453","text":"409"},{"range":"454","text":"407"},{"range":"455","text":"409"},"Update the dependencies array to be: [autoPlay, nextSong, playSong, tracks]",{"range":"456","text":"457"},{"range":"458","text":"401"},[486,502],"[includedTracks, loading]",[2277,2295],"[dispatch, includeAmount, playlists?.items, selectedPlaylist, spotify]",[3780,3789],"[handleVisibilityChange, inLobby, socket]",[5810,5812],"[roomInfo.bingos.blackout.taken, roomInfo.bingos.diagonal.taken, roomInfo.bingos.horizontal.taken, roomInfo.bingos.vertical.taken, socket, verticalTaken]",[8488,8489],"",[8488,8488],"\\",[8693,8694],[8693,8693],[8898,8899],[8898,8898],[9103,9104],[9103,9103],[9330,9331],[9330,9330],[9594,9595],[9594,9594],[9799,9800],[9799,9799],[10004,10005],[10004,10004],[10209,10210],[10209,10209],[10414,10415],[10414,10414],[10679,10680],[10679,10679],[10886,10887],[10886,10886],[11192,11193],[11192,11192],[11399,11400],[11399,11399],[11665,11666],[11665,11665],[11872,11873],[11872,11872],[12079,12080],[12079,12079],[12286,12287],[12286,12286],[12493,12494],[12493,12493],[12781,12782],[12781,12781],[12988,12989],[12988,12988],[13195,13196],[13195,13195],[13402,13403],[13402,13402],[13631,13632],[13631,13631],[1695,1697],"[autoPlay, nextSong, playSong, tracks]",[3804,3822]]